{"version":3,"sources":["serviceWorker.js","apis/index.js","apis/worker.js","actions/board.js","actions/types.js","components/GoogleAuth.js","actions/auth.js","components/boards/Header.js","components/boards/Item.js","components/boards/List.js","components/Boards.js","actions/lane.js","components/board/Header.js","components/board/Card.js","components/board/CardLane.js","actions/card.js","components/board/CompositeLane.js","components/board/Lane.js","components/board/Body.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/authReducer.js","reducers/visibilityFilter.js","reducers/index.js","reducers/boardReducer.js","reducers/boardLaneReducer.js","reducers/laneLaneReducer.js","reducers/laneCardReducer.js","reducers/cardReducer.js","store.js","apis/socket.js","components/Board.js","history.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","axios","create","baseURL","process","worker","boardId","commands","console","log","server","post","concat","fetchBoard","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","get","sent","type","payload","data","stop","this","_x3","apply","arguments","GoogleAuth","onAuthChange","isSignedIn","profile","_this","auth","currentUser","getBasicProfile","getId","email","getEmail","name","getName","props","signIn","signOut","onSignInClick","onSignOutClick","_this2","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","react_default","createElement","onClick","className","title","React","Component","connect","state","userProfile","userId","secure","owner","_ref4","_callee4","_context4","layout","shared","_x4","createBoard","filter","setVisibilityFilter","_ref","input","onSubmit","e","preventDefault","components_GoogleAuth","placeholder","ref","node","value","trim","Item","description","editable","shareBoard","deleteBoard","Link","style","textDecoration","fontWeight","to","display","List","_this$props","fetchBoards","currentUserId","prevProps","_this$props2","boards","map","board","boards_Item","assign","key","objectSpread","values","visibilityFilter","toLowerCase","includes","_ref2","_callee2","_context2","t0","_x2","_ref7","_callee7","_context7","put","_x7","_ref8","_callee8","_context8","delete","_x8","Boards","boards_Header","boards_List","createLane","board_id","parent_id","update","_ref6","_callee6","_context6","_x6","_ref5","_callee5","_context5","_x5","lane","defaultValue","layoutIcon","layoutButton","Card","card","deleteCard","overflow","CardLane","createCard","_this$props3","children","cards","_this$props4","renderCards","ownProps","lanes","laneId","_callee","_context","_x","cardId","CompositeLane","createChild","createCardLane","Lane","renderLanes","board_CardLane","board_CompositeLane","Body","monitorReducer","createStore","reducer","initialState","enhancer","action","number","start","performance","now","newState","end","diff","Math","round","logger","store","group","info","result","getState","groupEnd","INTIAL_STATE","length","undefined","combineReducers","defineProperty","_","mapKeys","walkFn","el","visitFn","forEach","i","push","omit","formatBoard","boardLanes","laneLanes","laneCards","configureStore","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducerEnhancer","composedEnhancers","composeWithDevTools","rootReducer","REFRESHCARDNOTIFICATION","REFRESHLANENOTIFICATION","REFRESHBOARDNOTIFICATION","socket","sendMessage","ws","msg","JSON","parse","send","processNotification","apis_socket","conn","WebSocket","onopen","evt","onclose","onmessage","notifiactions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","createSocket","Board","params","stringify","board_Header","board_Body","createHistory","App","Router","history","Switch","Route","path","exact","component","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49a80f56.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL\r\n});","import server from './index';\r\n\r\nexport const UPDATECARD = 0;\r\nexport const REMOVECARD = 1;\r\nexport const EXCLUDECHILD = 2;\r\nexport const APPENDCHILD = 3;\r\nexport const INSERTBEFORE = 4;\r\nexport const INSERTAFTER = 5;\r\nexport const LAYOUTBOARD = 6;\r\n\r\nlet sharedWorker = null;\r\n\r\nif (false && window.SharedWorker) {\r\n  sharedWorker = new SharedWorker(`${process.env.REACT_APP_CONTEXT_ROOT}/worker.js`);\r\n  sharedWorker.port.start();\r\n\r\n  console.log('shared worker: started');\r\n\r\n  sharedWorker.port.addEventListener('message', event => {\r\n    console.log('main: message received from shared worker', event.data);\r\n  });\r\n}\r\n\r\nexport default (boardId, commands) => {\r\n  if (!sharedWorker) {\r\n    console.log('main: shared worker is not available');\r\n\r\n    server.post(`/v1/api/command/${boardId}`, commands);\r\n    \r\n    return;\r\n  }\r\n\r\n  console.log('main: post commands to shared worker', commands);\r\n\r\n  sharedWorker.port.postMessage({ boardId, commands });\r\n\r\n  console.log('main: commands posted to shared worker');\r\n};\r\n","import server from '../apis/index';\r\nimport worker, { LAYOUTBOARD } from '../apis/worker';\r\n//import { root } from '../apis/urls';\r\n//import history from '../history';\r\n\r\nimport {\r\n  FETCH_BOARD_LANES,\r\n\r\n  CREATE_BOARD,\r\n  FETCH_BOARDS,\r\n  FETCH_BOARD,\r\n  DELETE_BOARD,\r\n  RENAME_BOARD,\r\n  SHARE_BOARD,\r\n  LAYOUT_BOARD\r\n\r\n} from './types';\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n});\r\n\r\nexport const fetchBoardLanes = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/board/${id}/lanes`);\r\n\r\n  dispatch({ type: FETCH_BOARD_LANES, payload: { id, lanes: response.data }});\r\n};\r\n\r\nexport const fetchBoards = owner => async dispatch => {\r\n  const response = owner\r\n    ? await server.get(`/v1/api/board?owner=${owner}`)\r\n    : await server.get('/v1/api/board');\r\n\r\n  dispatch({ type: FETCH_BOARDS, payload: response.data });\r\n};\r\n\r\nexport const fetchBoard = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/board/${id}`);\r\n\r\n  dispatch({ type: FETCH_BOARD, payload: response.data });\r\n};\r\n\r\nexport const createBoard = (name, owner) => async dispatch => {\r\n  const response = await server.post('/v1/api/board', { name, owner, layout: 'H', shared: false });\r\n\r\n  dispatch({ type: CREATE_BOARD, payload: response.data });\r\n};\r\n\r\nexport const layoutBoard = (id, layout) => async dispatch => {\r\n  worker(id, [{ id, board_id: id, type: LAYOUTBOARD, payload: { layout } }]);\r\n\r\n  dispatch({ type: LAYOUT_BOARD, payload: { id, layout } });\r\n};\r\n\r\nexport const renameBoard = (id, name) => async dispatch => {\r\n  const response = await server.put(`/v1/api/board/${id}/rename`, { name });\r\n\r\n  dispatch({ type: RENAME_BOARD, payload: response.data });\r\n};\r\n\r\nexport const shareBoard = (id, shared) => async dispatch => {\r\n  const response = await server.put(`/v1/api/board/${id}/share`, { shared });\r\n\r\n  dispatch({ type: SHARE_BOARD, payload: response.data });\r\n};\r\n\r\nexport const deleteBoard = id => async dispatch => {\r\n  await server.delete(`/v1/api/board/${id}`);\r\n\r\n  dispatch({ type: DELETE_BOARD, payload: id });\r\n};\r\n\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n\r\nexport const FETCH_BOARD_LANES = 'FETCH_BOARD_LANES'\r\n\r\nexport const FETCH_BOARDS = 'FETCH_BOARDS';\r\nexport const FETCH_BOARD = 'FETCH_BOARD';\r\nexport const CREATE_BOARD = 'CREATE_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const RENAME_BOARD = 'RENAME_BOARD';\r\nexport const SHARE_BOARD = 'SHARE_BOARD';\r\nexport const LAYOUT_BOARD = 'LAYOUT_BOARD';\r\n\r\nexport const FETCH_LANE_LANES = 'FETCH_LANE_LANES'\r\n\r\nexport const CREATE_LANE = 'CREATE_LANE';\r\n\r\nexport const FETCH_LANE_CARDS = 'FETCH_LANE_CARDS'\r\n\r\nexport const CREATE_CARD = 'CREATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions/auth';\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load('client:auth2', () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId: `${process.env.REACT_APP_AUTH_CLIENTID}`,\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    if (isSignedIn) {\r\n      const profile = this.auth.currentUser.get().getBasicProfile();\r\n      const payload = {\r\n        id: profile.getId(),\r\n        email: profile.getEmail(),\r\n        name: profile.getName()\r\n      };\r\n      this.props.signIn(payload);\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button\r\n          onClick={this.onSignOutClick}\r\n          className=\"btn btn-info btn-sm\"\r\n          title={this.props.profile.name}\r\n        >\r\n          <i className=\"fa fa-fw fa-google\" />\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          onClick={this.onSignInClick}\r\n          className=\"btn btn-info btn-sm\"\r\n        >\r\n          <i className=\"fa fa-fw fa-google\" />\r\n          Sign In\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isSignedIn: state.auth.isSignedIn, profile: state.auth.userProfile };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n} from './types';\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createBoard, setVisibilityFilter } from '../../actions/board';\r\nimport GoogleAuth from '../GoogleAuth';\r\n\r\nconst Header = ({ secure, owner, create, filter }) => {\r\n  let input;\r\n\r\n  const createButton = () => {\r\n    if (!secure) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          className=\"btn btn-info btn-sm\"\r\n          onClick={e => {\r\n            if (!input.value.trim()) {\r\n              return;\r\n            }\r\n            console.log(secure, owner);\r\n            create(input.value, secure ? owner : 'anonymous');\r\n            input.value = '';\r\n          }}\r\n        >\r\n          <i className=\"fa fa-fw fa-check\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark navbar-dark fixed-top\">\r\n      <div className=\"container-fluid no-gutters\">\r\n        <div className=\"col-12 col-sm-9 col-md-6 col-lg-3 ml-auto mr-auto\">\r\n          <form\r\n            className=\"input-group\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <GoogleAuth />\r\n              </div>\r\n              <input\r\n                type=\"search\"\r\n                className=\"form-control form-control-sm\"\r\n                placeholder=\"Board title...\"\r\n                ref={node => (input = node)}\r\n              />\r\n              {createButton()}\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-info btn-sm\"\r\n                  onClick={e => {\r\n                    filter(input.value.trim());\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-fw fa-search\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  secure: state.auth.isSignedIn,\r\n  owner: state.auth.userProfile && state.auth.userProfile.id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  create: (title, owner) => createBoard(title, owner)(dispatch),\r\n  filter: title => dispatch(setVisibilityFilter(title))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Item = ({ id, name, description, shared, editable, shareBoard, deleteBoard }) => (\r\n  <div id={`${id}`} className=\"card-wrapper float-left m-3\">\r\n    <div className=\"card shadow board\">\r\n      <div className=\"card-header\">\r\n        <div className=\"card-title mb-0\">\r\n          <div className=\"row mx-0\">\r\n            <div className=\"mr-auto\">\r\n              <Link\r\n                className=\"text-info\"\r\n                style={{ textDecoration: 'none', fontWeight: '500' }}\r\n                to={`${process.env.REACT_APP_CONTEXT_ROOT}/board/${id}`}\r\n              >\r\n                {name}\r\n              </Link>\r\n            </div>\r\n            <div\r\n              className=\"hover-card-badges\"\r\n              style={{ display: editable ? 'inline' : 'none' }}\r\n            >\r\n              <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n              <i\r\n                className=\"fa fa-fw fa-eye text-muted\"\r\n                title=\"public\"\r\n                style={{ display: shared ? 'inline' : 'none' }}\r\n                onClick={() => shareBoard(id, false)}\r\n              />\r\n              <i\r\n                className=\"fa fa-fw fa-eye-slash text-muted\"\r\n                title=\"private\"\r\n                style={{ display: shared ? 'none' : 'inline' }}\r\n                onClick={() => shareBoard(id, true)}\r\n              />\r\n              <i\r\n                className=\"fa fa-fw fa-trash text-muted\"\r\n                title=\"delete\"\r\n                onClick={() => deleteBoard(id)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"board-body-wrapper\">\r\n          <div className=\"card-text small text-justify\">{description}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Item from './Item';\r\nimport {\r\n  fetchBoards,\r\n  shareBoard,\r\n  deleteBoard\r\n} from '../../actions/board';\r\n\r\nclass List extends React.Component {\r\n  componentDidMount() {\r\n    let { fetchBoards, currentUserId } = this.props;\r\n\r\n    fetchBoards(currentUserId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    let { fetchBoards, currentUserId } = this.props;\r\n\r\n    if (currentUserId !== prevProps.currentUserId) {\r\n      fetchBoards(currentUserId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid board-list\">\r\n        <div className=\"lane-wrapper lane-item\">\r\n          <div className=\"lane-body\">\r\n            {this.props.boards.map(board => (\r\n              <Item\r\n                key={board.id}\r\n                {...{\r\n                  ...board,\r\n                  editable: this.props.isSignedIn && this.props.currentUserId === board.owner,\r\n                  shareBoard: this.props.shareBoard,\r\n                  deleteBoard: this.props.deleteBoard\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      selected: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired\r\n};\r\n*/\r\n\r\nconst mapStateToProps = state => {\r\n  let boards = Object.values(state.boards);\r\n  let filter = state.visibilityFilter.toLowerCase();\r\n\r\n  return {\r\n    boards: boards.filter(board => (board.name || '').toLowerCase().includes(filter)),\r\n    currentUserId: state.auth.isSignedIn ? state.auth.userProfile.id : null,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoards, shareBoard, deleteBoard }\r\n)(List);\r\n","import React from 'react';\r\nimport Header from './boards/Header';\r\nimport List from './boards/List';\r\n\r\nconst Boards = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <List />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boards;","import server from '../apis/index';\r\nimport worker, { APPENDCHILD } from '../apis/worker';\r\n\r\nimport {\r\n  FETCH_LANE_LANES,\r\n  CREATE_LANE,\r\n\r\n  FETCH_LANE_CARDS\r\n\r\n} from './types';\r\n\r\nexport const fetchLaneLanes = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/lane/${id}/lane`);\r\n\r\n  dispatch({ type: FETCH_LANE_LANES, payload: { id, lanes: response.data }});\r\n};\r\n\r\nexport const createLane = (boardId, name) => async dispatch => {\r\n  const response = await server.post(`/v1/api/board/${boardId}/lanes`, { name, layout: 'H', type: 'L' });\r\n\r\n  worker(boardId, [{ id: response.data.id, board_id: boardId, type: APPENDCHILD, payload: { parent_id: boardId } }]);\r\n\r\n  dispatch({ type: CREATE_LANE, payload: { ...response.data, boardId } });\r\n};\r\n\r\nexport const createCardLane = (boardId, laneId, name) => async dispatch => {\r\n  const response = await server.post(`/v1/api/board/${boardId}/lanes`, { name, type: 'C' });\r\n\r\n  worker(boardId, [{ id: response.data.id, board_id: boardId, type: APPENDCHILD, payload: { parent_id: laneId } }]);\r\n\r\n  dispatch({ type: CREATE_LANE, payload: { ...response.data, boardId } });\r\n};\r\n\r\nexport const fetchLaneCards = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/lane/${id}/card`);\r\n\r\n  dispatch({ type: FETCH_LANE_CARDS, payload: { id, cards: response.data }});\r\n};\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { renameBoard, layoutBoard } from '../../actions/board';\r\nimport { createLane } from '../../actions/lane';\r\n\r\nconst Header = ({ editable, update, layout, lane, board }) => {\r\n  let input;\r\n\r\n  const updateButton = () => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          className=\"btn btn-success btn-sm\"\r\n          onClick={e => {\r\n            if (!input.value.trim()) {\r\n              return;\r\n            }\r\n            update(board.id, input.value);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-fw fa-check\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const layoutButton = () => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n\r\n    const layoutIcon = board.layout === 'V' ? 'fa-table' : 'fa-columns';\r\n\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm text-white\"\r\n        onClick={e => {\r\n          layout(board.id, board.layout === 'V' ? 'H' : 'V');\r\n        }}\r\n      >\r\n        <i className={`fa fa-fw ${layoutIcon}`} />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const laneButton = () => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm text-white\"\r\n        onClick={e => {\r\n          lane(board.id, 'Lane');\r\n        }}\r\n      >\r\n        <i className=\"fa fa-fw fa-file\" />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark navbar-dark\">\r\n      <div className=\"container-fluid no-gutters\">\r\n        <div className=\"col-12 col-sm-12 col-md-6 col-lg-3 ml-auto\">\r\n          <form\r\n            className=\"input-group ml-auto mr-auto\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <Link to={`${process.env.REACT_APP_CONTEXT_ROOT}/`} className=\"btn btn-success btn-sm\">\r\n                  <i className=\"fa fa-fw fa-home\" />\r\n                </Link>\r\n              </div>\r\n              <input\r\n                type=\"search\"\r\n                className=\"form-control form-control-sm\"\r\n                defaultValue={board.name}\r\n                ref={node => (input = node)}\r\n              />\r\n              {updateButton()}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"mr-auto\">\r\n          {laneButton()}\r\n          <button className=\"btn btn-sm text-white\">\r\n            <i className=\"fa fa-fw fa-filter\" />\r\n          </button>\r\n          {layoutButton()}\r\n          <button className=\"btn btn-sm text-white\">\r\n            <i className=\"fa fa-fw fa-gear\" />\r\n          </button>\r\n          <button className=\"btn btn-sm text-white\">\r\n            <i className=\"fa fa-fw fa-refresh\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = () => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { update: renameBoard, layout: layoutBoard, lane: createLane }\r\n)(Header);\r\n","import React from 'react';\r\n\r\nexport default ({ card, deleteCard, editable }) => {\r\n  return (\r\n    <div className=\"card-wrapper float-left m-3\">\r\n      <div className=\"card shadow item\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-title mb-0\">\r\n          <div className=\"row mx-0\">\r\n              <div className=\"mr-auto\">{card.name}</div>\r\n              <div\r\n                className=\"hover-card-badges\"\r\n                style={{ display: editable ? 'inline' : 'none' }}\r\n              >\r\n                <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n                <i\r\n                  className=\"fa fa-fw fa-trash text-muted\"\r\n                  title=\"delete\"\r\n                  onClick={() => deleteCard(card.id)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body py-2\" style={{ overflow: 'hidden' }}>\r\n          <div className=\"card-body-wrapper\">\r\n            <div className=\"card-text small text-justify\">{card.description}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  createCard,\r\n  deleteCard\r\n} from '../../actions/card';\r\nimport Card from './Card';\r\n\r\nclass CardLane extends React.Component {\r\n  renderCards() {\r\n    const { lane, board, editable } = this.props;\r\n\r\n    if (!lane || !lane.children) {\r\n      return null;\r\n    }\r\n\r\n    return lane.children.map(id => board.cards[id]).map(card => <Card key={card.id} card={card} deleteCard={this.deleteCard} editable={editable}/>);\r\n  }\r\n\r\n  createCard = () => {\r\n    const { lane, board, createCard, editable } = this.props;\r\n\r\n    if (editable && lane && createCard) {\r\n      createCard(board.id, lane.id, 'Card');\r\n    }\r\n  };\r\n\r\n  deleteCard = (id) => {\r\n    const { lane, board, deleteCard, editable } = this.props;\r\n\r\n    if (editable && lane && deleteCard) {\r\n      deleteCard(board.id, id, lane.id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { lane, editable } = this.props;\r\n\r\n    return (\r\n      <div className=\"lane-wrapper\">\r\n        <div className=\"lane-header card-header border rounded-0\">\r\n          <div className=\"card-title mb-0\">\r\n            <div className=\"row mx-0\">\r\n              <div className=\"mr-auto\">{lane.name}</div>\r\n              <div\r\n                className=\"hover-card-badges\"\r\n                style={{ display: editable ? 'inline' : 'none' }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-fw fa-file text-muted\"\r\n                  title=\"card\"\r\n                  onClick={this.createCard}\r\n                />\r\n                <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n                <i\r\n                  className=\"fa fa-fw fa-trash text-muted\"\r\n                  title=\"delete\"\r\n                  /*onClick={() => deleteLane(id)}*/\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"lane-body\">{this.renderCards()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let board = state.boards[ownProps.board.id];\r\n  let lane  = board.lanes[ownProps.lane.id];\r\n  return { board, lane };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createCard, deleteCard }\r\n)(CardLane);\r\n","import server from '../apis/index';\r\nimport worker, { APPENDCHILD, REMOVECARD } from '../apis/worker';\r\n\r\nimport {\r\n  CREATE_CARD,\r\n  DELETE_CARD\r\n\r\n} from './types';\r\n\r\nexport const createCard = (boardId, laneId, name) => async dispatch => {\r\n  const response = await server.post(`/v1/api/board/${boardId}/cards`, { name });\r\n\r\n  worker(boardId, [{ id: response.data.id, board_id: boardId, type: APPENDCHILD, payload: { parent_id: laneId } }]);\r\n\r\n  dispatch({ type: CREATE_CARD, payload: response.data });\r\n};\r\n\r\nexport const deleteCard = (boardId, cardId, laneId) => dispatch => {\r\n  worker(boardId, [{ id: cardId, board_id: boardId, type: REMOVECARD, payload: { parent_id: laneId } }]);\r\n\r\n  dispatch({ type: DELETE_CARD, payload: cardId });\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createLane, createCardLane } from '../../actions/lane';\r\nimport Lane from './Lane';\r\n\r\nclass CompositeLane extends React.Component {\r\n  renderLanes() {\r\n    const { lane, board, editable } = this.props;\r\n\r\n    if (!lane || !lane.children) {\r\n      return null;\r\n    }\r\n\r\n    return lane.children.map(id => board.lanes[id]).map(lane => (\r\n      <Lane key={lane.id} lane={lane} board={board} editable={editable}/>\r\n    ));\r\n  }\r\n\r\n  createChild = () => {\r\n    const { lane, board, createCardLane, editable } = this.props;\r\n\r\n    if (editable && lane && createCardLane) {\r\n      createCardLane(board.id, lane.id, 'CardLane');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { lane, editable } = this.props;\r\n\r\n    return (\r\n      <div className=\"lane-wrapper\">\r\n        <div className=\"lane-header card-header border rounded-0\">\r\n          <div className=\"card-title mb-0\">\r\n            <div className=\"row mx-0\">\r\n              <div className=\"mr-auto\">{lane.name}</div>\r\n              <div\r\n                className=\"hover-card-badges\"\r\n                style={{ display: editable ? 'inline' : 'none' }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-fw fa-file text-muted\"\r\n                  title=\"lane\"\r\n                  onClick={this.createChild}\r\n                />\r\n                <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n                <i\r\n                  className=\"fa fa-fw fa-trash text-muted\"\r\n                  title=\"delete\"\r\n                  /*onClick={() => deleteLane(id)}*/\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"lane-body\">{this.renderLanes()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let board = state.boards[ownProps.board.id];\r\n  let lane = board.lanes[ownProps.lane.id];\r\n  return { board, lane };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createLane, createCardLane }\r\n)(CompositeLane);\r\n","import React from 'react';\r\nimport CardLane from './CardLane';\r\nimport CompositeLane from './CompositeLane';\r\n\r\nexport default ({ lane, board, editable }) => {\r\n  return lane.type === 'C' ? (\r\n    <CardLane key={lane.id} lane={lane} board={board} editable={editable}/>\r\n  ) : (\r\n    <CompositeLane key={lane.id} lane={lane} board={board} editable={editable}/>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Lane from './Lane';\r\n\r\nclass Body extends React.Component {\r\n  renderLanes() {\r\n    const { board, editable } = this.props;\r\n\r\n    if (!board || !board.children) {\r\n      return null;\r\n    }\r\n\r\n    return board.children.map(id => board.lanes[id]).map(lane => <Lane key={lane.id} lane={lane} board={board} editable={editable}/>);\r\n  }\r\n\r\n  render() {\r\n    const board = this.props.board;\r\n    const layout = (board && board.layout) || 'V';\r\n    const style = layout === 'V' ? 'flex-column' : 'flex-row';\r\n    return <div className={`d-flex ${style}`}>{this.renderLanes()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    board: state.boards[ownProps.board.id]\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Body);\r\n\r\n","const round = number => Math.round(number * 100) / 100;\r\n\r\nexport default createStore => (reducer, initialState, enhancer) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now();\r\n    const newState = reducer(state, action);\r\n    const end = performance.now();\r\n    const diff = round(end - start);\r\n\r\n    console.log('reducer process time:', diff);\r\n\r\n    return newState;\r\n  };\r\n\r\n  return createStore(monitoredReducer, initialState, enhancer);\r\n};\r\n","export default store => next => action => {\r\n  console.group(action.type || 'THUNK');\r\n  console.info('dispatching', action);\r\n  let result = next(action);\r\n  console.log('next state', store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  userProfile: null\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userProfile: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userProfile: null };\r\n    default:\r\n      return state;\r\n  }\r\n};","const visibilityFilter = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport authReducer from './authReducer';\r\nimport boardReducer from './boardReducer';\r\nimport boardLaneReducer from './boardLaneReducer';\r\nimport laneLaneReducer from './laneLaneReducer';\r\nimport laneCardReducer from './laneCardReducer';\r\nimport cardReducer from './cardReducer';\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  boards: boardReducer,\r\n  boardLanes: boardLaneReducer,\r\n  laneLanes: laneLaneReducer,\r\n  laneCards: laneCardReducer,\r\n  cards: cardReducer,\r\n  visibilityFilter\r\n})\r\n","import _ from 'lodash';\r\nimport {\r\n  FETCH_BOARD_LANES,\r\n  FETCH_BOARD,\r\n  FETCH_BOARDS,\r\n  CREATE_BOARD,\r\n  RENAME_BOARD,\r\n  SHARE_BOARD,\r\n  DELETE_BOARD,\r\n  LAYOUT_BOARD,\r\n  CREATE_LANE\r\n} from '../actions/types';\r\n\r\nconst formatBoard = payload => {\r\n  let walkFn = (el, visitFn) => {\r\n    visitFn(el)\r\n\r\n    if (el.lanes) {\r\n      el.lanes.forEach(i => walkFn(i, visitFn));\r\n    }\r\n\r\n    if (el.cards) {\r\n      el.cards.forEach(i => walkFn(i, visitFn)) \r\n    }\r\n  };\r\n\r\n  let lanes = [];\r\n  let cards = [];\r\n\r\n  walkFn(payload, el => {\r\n\r\n    if (el.type) { \r\n      let children = (el.lanes || el.cards || []).map(i => i.id);\r\n      lanes.push(_.omit({ ...el, children }, [ 'lanes', 'cards' ])); \r\n    } else if (el.id !== payload.id) { \r\n      cards.push(el); \r\n    } \r\n  });\r\n\r\n  return { ...payload, children: (payload.lanes || []).map(i => i.id), lanes: _.mapKeys(lanes, 'id'), cards: _.mapKeys(cards, 'id') };\r\n};\r\n\r\nexport default (state = {}, action) => {\r\n  let board = null;\r\n  switch (action.type) {\r\n    case FETCH_BOARD_LANES:\r\n      board = {\r\n        ...state[action.payload.id],\r\n        lanes: action.payload.lanes\r\n      };\r\n      return { ...state, [action.payload.id]: board };\r\n    case FETCH_BOARDS:\r\n      return { ..._.mapKeys(action.payload, 'id') };\r\n    case FETCH_BOARD:\r\n      return { ...state, [action.payload.id]: formatBoard(action.payload) };\r\n    case CREATE_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case RENAME_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case SHARE_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_BOARD:\r\n      return _.omit(state, action.payload);\r\n    case LAYOUT_BOARD:\r\n      board = {\r\n        ...state[action.payload.id],\r\n        layout: action.payload.layout\r\n      };\r\n      return { ...state, [action.payload.id]: board };\r\n    case CREATE_LANE:\r\n      board = state[action.payload.boardId];\r\n      board.lanes[action.payload.id] = _.omit({ ...action.payload, children: [] }, 'boardId');\r\n      return { ...state, [board.id]: board };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_BOARD_LANES } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_LANES:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_LANE_LANES } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_LANE_LANES:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_LANE_CARDS } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_LANE_CARDS:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_CARD\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_CARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport monitorReducerEnhancer from './enhancers/monitorReducer';\r\nimport loggerMiddleware from './middleware/logger';\r\nimport rootReducer from './reducers';\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [loggerMiddleware, thunkMiddleware];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer, monitorReducerEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n  return createStore(rootReducer, {}, composedEnhancers);\r\n};\r\n\r\nexport default configureStore();\r\n","import { fetchBoard } from '../actions/board';\r\nimport store from '../store';\r\n\r\nconst REFRESHCARDNOTIFICATION = 0;\r\nconst REFRESHLANENOTIFICATION = 1;\r\nconst REFRESHBOARDNOTIFICATION = 2;\r\nconst REMOVECARDNOTIFICATION = 3;\r\nconst REMOVELANENOTIFICATION = 4;\r\nconst REMOVEBOARDNOTIFICATION = 5;\r\n\r\nlet socket = null;\r\n\r\nfunction createSocket(msg) {\r\n  let conn = new WebSocket(`${process.env.REACT_APP_WS_URL}/v1/api/notify`);\r\n\r\n  conn.onopen = function(evt) {\r\n    console.log('websocket opened');\r\n    if (msg) {\r\n      sendMessage(conn, msg);\r\n    }\r\n  };\r\n  conn.onclose = function(evt) {\r\n    console.log('websocket closed');\r\n    socket = null;\r\n  };\r\n  conn.onmessage = function(evt) {\r\n    const notifiactions = JSON.parse(evt.data);\r\n    console.log('websocket: receive', notifiactions);\r\n    if (notifiactions && notifiactions.length) {\r\n      for (let notification of notifiactions) {\r\n        processNotification(notification);\r\n      }\r\n    } else {\r\n      console.log('array is expected by socket!');\r\n    }\r\n  };\r\n\r\n  return conn;\r\n}\r\n\r\nfunction sendMessage(ws, msg) {\r\n  console.log('websocket: send', JSON.parse(msg));\r\n  ws.send(msg);\r\n}\r\n\r\nfunction processNotification(msg) {\r\n  console.log(msg);\r\n  switch (msg.type) {\r\n    case REFRESHCARDNOTIFICATION:\r\n    case REFRESHLANENOTIFICATION:\r\n    case REFRESHBOARDNOTIFICATION:\r\n      fetchBoard(msg.board_id)(store.dispatch);\r\n      return;\r\n    case REMOVECARDNOTIFICATION:\r\n    case REMOVELANENOTIFICATION:\r\n    case REMOVEBOARDNOTIFICATION:\r\n    default:\r\n  }\r\n}\r\n\r\nexport default msg => {\r\n  if (!socket) {\r\n    console.log('websocket not available');\r\n    socket = createSocket(msg);\r\n    return;\r\n  }\r\n\r\n  sendMessage(socket, msg);\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './board/Header';\r\nimport Body from './board/Body';\r\nimport socket from '../apis/socket';\r\nimport { fetchBoard } from '../actions/board';\r\n\r\nclass Board extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const { fetchBoard } = this.props;\r\n\r\n    fetchBoard(id);\r\n\r\n    socket(JSON.stringify({ id }));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socket(JSON.stringify({ id: '' }));\r\n  }\r\n\r\n  render() {\r\n    const { board, editable } = this.props;\r\n\r\n    if (!board) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header board={board} editable={editable} />\r\n        <Body board={board} editable={editable} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let board = state.boards[ownProps.match.params.id];\r\n  let editable = state.auth.isSignedIn && board && board.owner === state.auth.userProfile.id\r\n\r\n  return { board, editable };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoard }\r\n)(Board);\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();","import React from 'react';\nimport Boards from './Boards';\nimport Board from './Board';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from '../history';\n\nconst App = () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <Route path={`${process.env.REACT_APP_CONTEXT_ROOT}/`} exact component={Boards} />\n        <Route path={`${process.env.REACT_APP_CONTEXT_ROOT}/board/:id`} component={Board} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}