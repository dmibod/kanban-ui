{"version":3,"sources":["serviceWorker.js","apis/urls.js","apis/index.js","apis/worker.js","actions/index.js","actions/types.js","components/GoogleAuth.js","components/boards/Header.js","components/boards/Item.js","components/boards/List.js","components/Boards.js","components/board/Header.js","components/board/Card.js","components/board/CardLane.js","components/board/CompositeLane.js","components/board/Lane.js","components/board/Body.js","enhancers/monitorReducer.js","middleware/logger.js","reducers/authReducer.js","reducers/visibilityFilter.js","reducers/index.js","reducers/boardReducer.js","reducers/boardLaneReducer.js","reducers/laneReducer.js","reducers/laneLaneReducer.js","reducers/laneCardReducer.js","reducers/cardReducer.js","store.js","apis/socket.js","components/Board.js","history.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","host","root","api","concat","wsapi","axios","create","baseURL","sharedWorker","SharedWorker","port","start","console","log","addEventListener","event","data","worker","boardId","commands","server","post","postMessage","fetchBoard","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","get","sent","type","payload","stop","this","_x3","apply","arguments","createLane","name","parentId","_ref10","_callee10","_context10","layout","board_id","parent_id","_x10","GoogleAuth","onAuthChange","isSignedIn","profile","_this","auth","currentUser","getBasicProfile","getId","email","getEmail","getName","props","signIn","signOut","onSignInClick","onSignOutClick","_this2","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","react_default","createElement","onClick","className","title","React","Component","connect","state","userProfile","userId","secure","owner","_ref4","_callee4","_context4","shared","_x4","createBoard","filter","setVisibilityFilter","_ref","input","onSubmit","e","preventDefault","components_GoogleAuth","placeholder","ref","node","value","trim","Item","description","editable","shareBoard","deleteBoard","Link","style","textDecoration","fontWeight","to","display","List","fetchBoards","currentUserId","prevProps","boards","map","board","boards_Item","assign","key","objectSpread","values","visibilityFilter","toLowerCase","includes","_ref2","_callee2","_context2","t0","_x2","_ref7","_callee7","_context7","put","_x7","_ref8","_callee8","_context8","delete","_x8","Boards","boards_Header","boards_List","ownProps","update","_ref6","_callee6","_context6","_x6","_ref5","_callee5","_context5","_x5","lane","defaultValue","layoutIcon","layoutButton","Card","card","deleteCard","overflow","CardLane","createCard","_this$props","_this$props2","cards","renderCards","findLane","lanes","found","find","el","i","length","laneId","_ref13","_callee13","_context13","_x13","CompositeLane","createChild","createCardLane","Lane","renderLanes","_ref11","_callee11","_context11","_x11","board_CardLane","board_CompositeLane","Body","monitorReducer","createStore","reducer","initialState","enhancer","action","number","performance","now","newState","end","diff","Math","round","logger","store","group","info","result","getState","groupEnd","INTIAL_STATE","undefined","combineReducers","defineProperty","_","mapKeys","omit","boardLanes","laneLanes","laneCards","configureStore","middlewares","loggerMiddleware","thunkMiddleware","enhancers","applyMiddleware","monitorReducerEnhancer","composedEnhancers","composeWithDevTools","rootReducer","REFRESHCARDNOTIFICATION","REFRESHLANENOTIFICATION","REFRESHBOARDNOTIFICATION","socket","sendMessage","ws","msg","JSON","parse","send","processNotification","apis_socket","conn","WebSocket","onopen","evt","onclose","onmessage","notifiactions","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","createSocket","Board","params","stringify","board_Header","board_Body","createHistory","App","Router","history","Switch","Route","path","exact","component","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"kMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uGChBAC,EAAgB,mBAETC,EAAgB,aAChBC,EAAG,OAAAC,OAJQ,IAIR,OAAAA,OAAsBH,GACzBI,EAAK,KAAAD,OALM,IAKN,OAAAA,OAAoBH,GCHvBK,MAAMC,OAAO,CAC1BC,QAASL,ICOPM,EAAe,KAEfZ,OAAOa,gBACTD,EAAe,IAAIC,aAAJ,GAAAN,OAAoBF,EAApB,gBACFS,KAAKC,QAElBC,QAAQC,IAAI,0BAEZL,EAAaE,KAAKI,iBAAiB,UAAW,SAAAC,GAC5CH,QAAQC,IAAI,4CAA6CE,EAAMC,SAIpD,IAAAC,EAAA,SAACC,EAASC,GACvB,IAAKX,EAKH,OAJAI,QAAQC,IAAI,6CAEZO,EAAOC,KAAP,mBAAAlB,OAA+Be,GAAWC,GAK5CP,QAAQC,IAAI,uCAAwCM,GAEpDX,EAAaE,KAAKY,YAAY,CAAEJ,UAASC,aAEzCP,QAAQC,IAAI,2CCuBDU,EAAa,SAAAC,GAAE,sBAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACPjB,EAAOkB,IAAP,iBAAAnC,OAA4BqB,IADrB,OACxBS,EADwBE,EAAAI,KAG9BP,EAAS,CAAEQ,KCzDc,cDyDKC,QAASR,EAASjB,OAHlB,wBAAAmB,EAAAO,SAAAX,EAAAY,SAAJ,gBAAAC,GAAA,OAAAnB,EAAAoB,MAAAF,KAAAG,YAAA,IA0CfC,EAAa,SAACC,EAAMC,GAAP,sBAAAC,EAAAxB,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAoB,SAAAqB,EAAMnB,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAkB,GAAA,cAAAA,EAAAhB,KAAAgB,EAAAf,MAAA,cAAAe,EAAAf,KAAA,EACrBjB,EAAOC,KAAP,iBAAAlB,OAA6B8C,EAA7B,UAA+C,CAAED,OAAMK,OAAQ,IAAKb,KAAM,MADrD,OACtCP,EADsCmB,EAAAb,KAG5CtB,EAAOgC,EAAU,CAAC,CAAEzB,GAAIS,EAASjB,KAAKQ,GAAI8B,SAAUL,EAAUT,KDnGrC,ECmGwDC,QAAS,CAAEc,UAAWN,MAEvGjB,EAAS,CAAEQ,KC5Fc,cD4FKC,QAASR,EAASjB,OALJ,wBAAAoC,EAAAV,SAAAS,EAAAR,SAApB,gBAAAa,GAAA,OAAAN,EAAAL,MAAAF,KAAAG,YAAA,4CElGpBW,6MAmBJC,aAAe,SAAAC,GACb,GAAIA,EAAY,CACd,IAAMC,EAAUC,EAAKC,KAAKC,YAAYzB,MAAM0B,kBACtCvB,EAAU,CACdjB,GAAIoC,EAAQK,QACZC,MAAON,EAAQO,WACfnB,KAAMY,EAAQQ,WAEhBP,EAAKQ,MAAMC,OAAO7B,QAElBoB,EAAKQ,MAAME,aAIfC,cAAgB,WACdX,EAAKC,KAAKQ,YAGZG,eAAiB,WACfZ,EAAKC,KAAKS,8FArCQ,IAAAG,EAAA/B,KAClB/C,OAAO+E,KAAKC,KAAK,eAAgB,WAC/BhF,OAAO+E,KAAKE,OACTC,KAAK,CACJC,SAEE,2EACFC,MAAO,UAERC,KAAK,WACJP,EAAKZ,KAAOlE,OAAO+E,KAAKO,MAAMC,kBAE9BT,EAAKhB,aAAagB,EAAKZ,KAAKH,WAAWrB,OACvCoC,EAAKZ,KAAKH,WAAWyB,OAAOV,EAAKhB,mDA4BvC,OAA8B,OAA1Bf,KAAK0B,MAAMV,WACN,KACEhB,KAAK0B,MAAMV,WAElB0B,EAAAxD,EAAAyD,cAAA,UACEC,QAAS5C,KAAK8B,eACde,UAAU,sBACVC,MAAO9C,KAAK0B,MAAMT,QAAQZ,MAE1BqC,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,wBAKfH,EAAAxD,EAAAyD,cAAA,UACEC,QAAS5C,KAAK6B,cACdgB,UAAU,uBAEVH,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,uBAJf,kBAxDiBE,IAAMC,WAwEhBC,cAJS,SAAAC,GACtB,MAAO,CAAElC,WAAYkC,EAAM/B,KAAKH,WAAYC,QAASiC,EAAM/B,KAAKgC,cAKhE,CAAExB,OFlDkB,SAAAyB,GACpB,MAAO,CACLvD,KC9BmB,UD+BnBC,QAASsD,IE+CDxB,QF3CW,WACrB,MAAO,CACL/B,KCpCoB,cC2EToD,CAGbnC,GCEamC,cAVS,SAAAC,GAAK,MAAK,CAChCG,OAAQH,EAAM/B,KAAKH,WACnBsC,MAAOJ,EAAM/B,KAAKgC,aAAeD,EAAM/B,KAAKgC,YAAYtE,KAG/B,SAAAQ,GAAQ,MAAK,CACtC1B,OAAQ,SAACmF,EAAOQ,GAAR,OHXiB,SAACjD,EAAMiD,GAAP,sBAAAC,EAAAxE,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAiB,SAAAqE,EAAMnE,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EACnBjB,EAAOC,KAAK,gBAAiB,CAAE2B,OAAMiD,QAAO5C,OAAQ,IAAKgD,QAAQ,IAD9C,OACpCpE,EADoCmE,EAAA7D,KAG1CP,EAAS,CAAEQ,KC9De,eD8DKC,QAASR,EAASjB,OAHP,wBAAAoF,EAAA1D,SAAAyD,EAAAxD,SAAjB,gBAAA2D,GAAA,OAAAJ,EAAArD,MAAAF,KAAAG,YAAA,GGWCyD,CAAYd,EAAOQ,EAAnBM,CAA0BvE,IACpDwE,OAAQ,SAAAf,GAAK,OAAIzD,EHrCgB,SAAAwE,GAAM,MAAK,CAC5ChE,KAAM,wBACNgE,UGmC0BC,CAAoBhB,OAGjCG,CA5EA,SAAAc,GAAuC,IAChDC,EADYX,EAAoCU,EAApCV,OAAQC,EAA4BS,EAA5BT,MAAO3F,EAAqBoG,EAArBpG,OAAQkG,EAAaE,EAAbF,OA2BvC,OACEnB,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,wCACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,8BACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,qDACbH,EAAAxD,EAAAyD,cAAA,QACEE,UAAU,cACVoB,SAAU,SAAAC,GACRA,EAAEC,mBAGJzB,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,eACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,uBACbH,EAAAxD,EAAAyD,cAACyB,EAAD,OAEF1B,EAAAxD,EAAAyD,cAAA,SACE9C,KAAK,SACLgD,UAAU,+BACVwB,YAAY,iBACZC,IAAK,SAAAC,GAAI,OAAKP,EAAQO,KAzC7BlB,EAKHX,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,sBACbH,EAAAxD,EAAAyD,cAAA,UACEE,UAAU,sBACVD,QAAS,SAAAsB,GACFF,EAAMQ,MAAMC,SAGjBxG,QAAQC,IAAImF,EAAQC,GACpB3F,EAAOqG,EAAMQ,MAAOnB,EAASC,EAAQ,aACrCU,EAAMQ,MAAQ,MAGhB9B,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,wBAhBV,KA2CCH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,sBACbH,EAAAxD,EAAAyD,cAAA,UACEE,UAAU,sBACVD,QAAS,SAAAsB,GACPL,EAAOG,EAAMQ,MAAMC,UAGrB/B,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,+CCAhB6B,EAvDF,SAAAX,GAAA,IAAGlF,EAAHkF,EAAGlF,GAAIwB,EAAP0D,EAAO1D,KAAMsE,EAAbZ,EAAaY,YAAajB,EAA1BK,EAA0BL,OAAQkB,EAAlCb,EAAkCa,SAAUC,EAA5Cd,EAA4Cc,WAAYC,EAAxDf,EAAwDe,YAAxD,OACXpC,EAAAxD,EAAAyD,cAAA,OAAK9D,GAAE,GAAArB,OAAKqB,GAAMgE,UAAU,+BAC1BH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,qBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,eACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,mBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,YACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,WACbH,EAAAxD,EAAAyD,cAACoC,EAAA,EAAD,CACElC,UAAU,YACVmC,MAAO,CAAEC,eAAgB,OAAQC,WAAY,OAC7CC,GAAE,GAAA3H,OAAKF,EAAL,WAAAE,OAAmBqB,IAEpBwB,IAGLqC,EAAAxD,EAAAyD,cAAA,OACEE,UAAU,oBACVmC,MAAO,CAAEI,QAASR,EAAW,SAAW,SAExClC,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,gCAAgCC,MAAM,SACnDJ,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,6BACVC,MAAM,SACNkC,MAAO,CAAEI,QAAS1B,EAAS,SAAW,QACtCd,QAAS,kBAAMiC,EAAWhG,GAAI,MAEhC6D,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,mCACVC,MAAM,UACNkC,MAAO,CAAEI,QAAS1B,EAAS,OAAS,UACpCd,QAAS,kBAAMiC,EAAWhG,GAAI,MAEhC6D,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,+BACVC,MAAM,SACNF,QAAS,kBAAMkC,EAAYjG,UAMrC6D,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,aACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,sBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,gCAAgC8B,QCvCnDU,8LAEFrF,KAAK0B,MAAM4D,YAAYtF,KAAK0B,MAAM6D,0DAGjBC,GACbxF,KAAK0B,MAAM6D,gBAAkBC,EAAUD,eACzCvF,KAAK0B,MAAM4D,YAAYtF,KAAK0B,MAAM6D,gDAI7B,IAAArE,EAAAlB,KACP,OACE0C,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,8BACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,0BACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,aACZ7C,KAAK0B,MAAM+D,OAAOC,IAAI,SAAAC,GAAK,OAC1BjD,EAAAxD,EAAAyD,cAACiD,EAAD7G,OAAA8G,OAAA,CACEC,IAAKH,EAAM9G,IADbE,OAAAgH,EAAA,EAAAhH,CAAA,GAGO4G,EAHP,CAIIf,SAAU1D,EAAKQ,MAAMV,YAAcE,EAAKQ,MAAM6D,gBAAkBI,EAAMrC,MACtEuB,WAAY3D,EAAKQ,MAAMmD,WACvBC,YAAa5D,EAAKQ,MAAMoD,4BAvBvB/B,IAAMC,WA2DVC,cAXS,SAAAC,GACtB,IAAIuC,EAAS1G,OAAOiH,OAAO9C,EAAMuC,QAC7B5B,EAASX,EAAM+C,iBAAiBC,cAEpC,MAAO,CACLT,OAAQA,EAAO5B,OAAO,SAAA8B,GAAK,OAAKA,EAAMtF,MAAQ,IAAI6F,cAAcC,SAAStC,KACzE0B,cAAerC,EAAM/B,KAAKH,WAAakC,EAAM/B,KAAKgC,YAAYtE,GAAK,KACnEmC,WAAYkC,EAAM/B,KAAKH,aAMzB,CAAEsE,YLlBuB,SAAAhC,GAAK,sBAAA8C,EAAArH,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAAkH,EAAMhH,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAA+G,GAAA,cAAAA,EAAA7G,KAAA6G,EAAA5G,MAAA,WACjB4D,EADiB,CAAAgD,EAAA5G,KAAA,eAAA4G,EAAA5G,KAAA,EAExBjB,EAAOkB,IAAP,uBAAAnC,OAAkC8F,IAFV,OAAAgD,EAAAC,GAAAD,EAAA1G,KAAA0G,EAAA5G,KAAA,sBAAA4G,EAAA5G,KAAA,EAGxBjB,EAAOkB,IAAI,iBAHa,OAAA2G,EAAAC,GAAAD,EAAA1G,KAAA,OAC5BN,EAD4BgH,EAAAC,GAKlClH,EAAS,CAAEQ,KCpDe,eDoDKC,QAASR,EAASjB,OALf,yBAAAiI,EAAAvG,SAAAsG,EAAArG,SAAJ,gBAAAwG,GAAA,OAAAJ,EAAAlG,MAAAF,KAAAG,YAAA,IKkBf0E,WLcS,SAAChG,EAAI6E,GAAL,sBAAA+C,EAAA1H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgB,SAAAuH,EAAMrH,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAoH,GAAA,cAAAA,EAAAlH,KAAAkH,EAAAjH,MAAA,cAAAiH,EAAAjH,KAAA,EACjBjB,EAAOmI,IAAP,iBAAApJ,OAA4BqB,EAA5B,UAAwC,CAAE6E,WADzB,OAClCpE,EADkCqH,EAAA/G,KAGxCP,EAAS,CAAEQ,KC7Ec,cD6EKC,QAASR,EAASjB,OAHR,wBAAAsI,EAAA5G,SAAA2G,EAAA1G,SAAhB,gBAAA6G,GAAA,OAAAJ,EAAAvG,MAAAF,KAAAG,YAAA,IKdG2E,YLoBF,SAAAjG,GAAE,sBAAAiI,EAAA/H,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAI,SAAA4H,EAAM1H,GAAN,OAAAJ,EAAAC,EAAAK,KAAA,SAAAyH,GAAA,cAAAA,EAAAvH,KAAAuH,EAAAtH,MAAA,cAAAsH,EAAAtH,KAAA,EACzBjB,EAAOwI,OAAP,iBAAAzJ,OAA+BqB,IADN,OAG/BQ,EAAS,CAAEQ,KCrFe,eDqFKC,QAASjB,IAHT,wBAAAmI,EAAAjH,SAAAgH,EAAA/G,SAAJ,gBAAAkH,GAAA,OAAAJ,EAAA5G,MAAAF,KAAAG,YAAA,KKtBd8C,CAGboC,GCzDa8B,EAVA,WAEb,OACEzE,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACyE,EAAD,MACA1E,EAAAxD,EAAAyD,cAAC0E,EAAD,QC+GSpE,cATS,SAACC,EAAOoE,GAC9B,MAAO,CACL1C,SACE1B,EAAM/B,KAAKH,YACXsG,EAAS3B,OACT2B,EAAS3B,MAAMrC,QAAUJ,EAAM/B,KAAKgC,YAAYtE,KAMpD,CAAE0I,OP5CuB,SAAC1I,EAAIwB,GAAL,sBAAAmH,EAAAzI,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAc,SAAAsI,EAAMpI,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAmI,GAAA,cAAAA,EAAAjI,KAAAiI,EAAAhI,MAAA,cAAAgI,EAAAhI,KAAA,EAChBjB,EAAOmI,IAAP,iBAAApJ,OAA4BqB,EAA5B,WAAyC,CAAEwB,SAD3B,OACjCf,EADiCoI,EAAA9H,KAGvCP,EAAS,CAAEQ,KCxEe,eDwEKC,QAASR,EAASjB,OAHV,wBAAAqJ,EAAA3H,SAAA0H,EAAAzH,SAAd,gBAAA2H,GAAA,OAAAH,EAAAtH,MAAAF,KAAAG,YAAA,IO4CFO,OPlDE,SAAC7B,EAAI6B,GAAL,sBAAAkH,EAAA7I,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAgB,SAAA0I,EAAMxI,GAAN,OAAAJ,EAAAC,EAAAK,KAAA,SAAAuI,GAAA,cAAAA,EAAArI,KAAAqI,EAAApI,MAAA,OACzCpB,EAAOO,EAAI,CAAC,CAAEA,KAAI8B,SAAU9B,EAAIgB,KDhEP,ECgE0BC,QAAS,CAAEY,aAE9DrB,EAAS,CAAEQ,KChEe,eDgEKC,QAAS,CAAEjB,KAAI6B,YAHL,wBAAAoH,EAAA/H,SAAA8H,EAAA7H,SAAhB,gBAAA+H,GAAA,OAAAH,EAAA1H,MAAAF,KAAAG,YAAA,IOkDmB6H,KAAM5H,GAFrC6C,CAlHA,SAAAc,GAA+C,IACxDC,EADYY,EAA4Cb,EAA5Ca,SAAU2C,EAAkCxD,EAAlCwD,OAAQ7G,EAA0BqD,EAA1BrD,OAAQsH,EAAkBjE,EAAlBiE,KAAMrC,EAAY5B,EAAZ4B,MA6DhD,OACEjD,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,8BACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,8BACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,8CACbH,EAAAxD,EAAAyD,cAAA,QACEE,UAAU,8BACVoB,SAAU,SAAAC,GACRA,EAAEC,mBAGJzB,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,eACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,uBACbH,EAAAxD,EAAAyD,cAACoC,EAAA,EAAD,CAAMI,GAAE,GAAA3H,OAAKF,EAAL,KAAcuF,UAAU,0BAC9BH,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,uBAGjBH,EAAAxD,EAAAyD,cAAA,SACE9C,KAAK,SACLgD,UAAU,+BACVoF,aAActC,EAAMtF,KACpBiE,IAAK,SAAAC,GAAI,OAAKP,EAAQO,KA7E7BK,EAKHlC,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,sBACbH,EAAAxD,EAAAyD,cAAA,UACEE,UAAU,yBACVD,QAAS,SAAAsB,GACFF,EAAMQ,MAAMC,QAGjB8C,EAAO5B,EAAM9G,GAAImF,EAAMQ,SAGzB9B,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,wBAdV,QAkFLH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,WA1Cd+B,EAKHlC,EAAAxD,EAAAyD,cAAA,UACEE,UAAU,wBACVD,QAAS,SAAAsB,GACP8D,EAAK,OAAQrC,EAAM9G,MAGrB6D,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,sBAVR,KA2CHH,EAAAxD,EAAAyD,cAAA,UAAQE,UAAU,yBAChBH,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,wBAjEF,WACnB,IAAK+B,EACH,OAAO,KAGT,IAAMsD,EAA8B,MAAjBvC,EAAMjF,OAAiB,WAAa,aAEvD,OACEgC,EAAAxD,EAAAyD,cAAA,UACEE,UAAU,wBACVD,QAAS,SAAAsB,GACPxD,EAAOiF,EAAM9G,GAAqB,MAAjB8G,EAAMjF,OAAiB,IAAM,OAGhDgC,EAAAxD,EAAAyD,cAAA,KAAGE,UAAS,YAAArF,OAAc0K,MAqDvBC,GACDzF,EAAAxD,EAAAyD,cAAA,UAAQE,UAAU,yBAChBH,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,sBAEfH,EAAAxD,EAAAyD,cAAA,UAAQE,UAAU,yBAChBH,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,8BCrGVuF,EAAA,SAAArE,GAA0B,IAAvBsE,EAAuBtE,EAAvBsE,KAAMC,EAAiBvE,EAAjBuE,WACtB,OACE5F,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,+BACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,oBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,eACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,mBACfH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,YACXH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,WAAWwF,EAAKhI,MAC/BqC,EAAAxD,EAAAyD,cAAA,OACEE,UAAU,oBACVmC,MAAO,CAAEI,QAA6B,WAEtC1C,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,gCAAgCC,MAAM,SACnDJ,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,+BACVC,MAAM,SACNF,QAAS,kBAAM0F,EAAWD,EAAKxJ,WAMzC6D,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,iBAAiBmC,MAAO,CAAEuD,SAAU,WACjD7F,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,qBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,gCAAf,2OClBN2F,6MAWJC,WAAa,WAAM,IAAAC,EACmBxH,EAAKQ,MAAjCsG,EADSU,EACTV,KAAMrC,EADG+C,EACH/C,MAAO8C,EADJC,EACID,WAEjBT,GAAQS,GACVA,EAAW9C,EAAM9G,GAAI,OAAQmJ,EAAKnJ,OAItCyJ,WAAa,SAACzJ,GAAO,IAAA8J,EACUzH,EAAKQ,MAA1BsG,EADWW,EACXX,KAAMM,EADKK,EACLL,WAEVN,GAAQM,GACVA,EAAWzJ,EAAImJ,EAAKnJ,kFAtBV,IAAAkD,EAAA/B,KACJgI,EAAShI,KAAK0B,MAAdsG,KAER,OAAKA,GAASA,EAAKY,MAIZZ,EAAKY,MAAMlD,IAAI,SAAA2C,GAAI,OAAI3F,EAAAxD,EAAAyD,cAACyF,EAAD,CAAMtC,IAAKuC,EAAKxJ,GAAIwJ,KAAMA,EAAMC,WAAYvG,EAAKuG,eAHtE,sCAuBT,OACE5F,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,gBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,4CACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,mBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,YACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,WAAW7C,KAAK0B,MAAMsG,KAAK3H,MAC1CqC,EAAAxD,EAAAyD,cAAA,OACEE,UAAU,oBACVmC,MAAO,CAAEI,QAA6B,WAEtC1C,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,8BACVC,MAAM,OACNF,QAAS5C,KAAKyI,aAEhB/F,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,gCAAgCC,MAAM,SACnDJ,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,+BACVC,MAAM,eAOhBJ,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,aAAa7C,KAAK6I,uBArDlB9F,IAAMC,WA8E7B,IAMeC,cANS,SAACC,EAAOoE,GAC9B,IAAI3B,EAAQzC,EAAMuC,OAAO6B,EAAS3B,MAAM9G,IAExC,MAAO,CAAE8G,QAAOqC,KAtBlB,SAASc,EAASC,EAAOlK,GAGvB,IAAImK,GAFJD,EAAQA,GAAS,IAECE,KAAK,SAAAC,GAAE,OAAIA,EAAGrK,KAAOA,IAEvC,GAAImK,EACF,OAAOA,EAGT,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAEhC,GADAH,EAAQF,EAASC,EAAMI,GAAGJ,MAAOlK,GAE/B,OAAOmK,EAIX,OAAO,KAKKF,CAASnD,EAAMoD,MAAOzB,EAASU,KAAKnJ,MAMhD,CAAE4J,WT8BsB,SAAClK,EAAS8B,EAAMgJ,GAAhB,sBAAAC,EAAAvK,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA2B,SAAAoK,EAAMlK,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,cAAA8J,EAAA9J,KAAA,EAC5BjB,EAAOC,KAAP,iBAAAlB,OAA6Be,EAA7B,UAA8C,CAAE8B,SADpB,OAC7Cf,EAD6CkK,EAAA5J,KAGnDtB,EAAOC,EAAS,CAAC,CAAEM,GAAIS,EAASjB,KAAKQ,GAAI8B,SAAUpC,EAASsB,KDzHnC,ECyHsDC,QAAS,CAAEc,UAAWyI,MAErGhK,EAAS,CAAEQ,KC9Gc,cD8GKC,QAASR,EAASjB,OALG,wBAAAmL,EAAAzJ,SAAAwJ,EAAAvJ,SAA3B,gBAAAyJ,GAAA,OAAAH,EAAApJ,MAAAF,KAAAG,YAAA,IS9BVmI,WTsCU,SAACzJ,EAAIwK,GAAL,OAAgB,SAAAhK,GACxCf,EAAO,CAAC,CAAEO,GAAIA,EAAIgB,KDjIM,ECiIYC,QAAS,CAAEc,UAAWyI,MAE1DhK,EAAS,CAAEQ,KCnHc,cDmHKC,QAASjB,OS3C1BoE,CAGbuF,GC1FIkB,6MAaJC,YAAc,WAAM,IAAAjB,EACsBxH,EAAKQ,MAArCsG,EADUU,EACVV,KAAMrC,EADI+C,EACJ/C,MAAOiE,EADHlB,EACGkB,eAEjB5B,GAAQ4B,GACVA,EAAejE,EAAM9G,GAAI,WAAYmJ,EAAKnJ,kFAhBhC,IAAA8J,EACY3I,KAAK0B,MAArBsG,EADIW,EACJX,KAAMrC,EADFgD,EACEhD,MAEd,OAAKqC,GAASA,EAAKe,MAIZf,EAAKe,MAAMrD,IAAI,SAAAsC,GAAI,OACxBtF,EAAAxD,EAAAyD,cAACkH,EAAD,CAAM/D,IAAKkC,EAAKnJ,GAAImJ,KAAMA,EAAMrC,MAAOA,MAJhC,sCAiBT,OACEjD,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,gBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,4CACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,mBACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,YACbH,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,WAAW7C,KAAK0B,MAAMsG,KAAK3H,MAC1CqC,EAAAxD,EAAAyD,cAAA,OACEE,UAAU,oBACVmC,MAAO,CAAEI,QAA6B,WAEtC1C,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,8BACVC,MAAM,OACNF,QAAS5C,KAAK2J,cAEhBjH,EAAAxD,EAAAyD,cAAA,KAAGE,UAAU,gCAAgCC,MAAM,SACnDJ,EAAAxD,EAAAyD,cAAA,KACEE,UAAU,+BACVC,MAAM,eAOhBJ,EAAAxD,EAAAyD,cAAA,OAAKE,UAAU,aAAa7C,KAAK8J,uBA/Cb/G,IAAMC,WAwElC,IAMeC,cANS,SAACC,EAAOoE,GAC9B,IAAI3B,EAAQzC,EAAMuC,OAAO6B,EAAS3B,MAAM9G,IAExC,MAAO,CAAE8G,QAAOqC,KAtBlB,SAASc,EAASC,EAAOlK,GAGvB,IAAImK,GAFJD,EAAQA,GAAS,IAECE,KAAK,SAAAC,GAAE,OAAIA,EAAGrK,KAAOA,IAEvC,GAAImK,EACF,OAAOA,EAGT,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAMK,OAAQD,IAEhC,GADAH,EAAQF,EAASC,EAAMI,GAAGJ,MAAOlK,GAE/B,OAAOmK,EAIX,OAAO,KAKIF,CAASnD,EAAMoD,MAAOzB,EAASU,KAAKnJ,MAM/C,CAAEuB,aAAYwJ,eVyBc,SAACrL,EAAS8B,EAAMgJ,GAAhB,sBAAAU,EAAAhL,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAA2B,SAAA6K,EAAM3K,GAAN,IAAAC,EAAA,OAAAL,EAAAC,EAAAK,KAAA,SAAA0K,GAAA,cAAAA,EAAAxK,KAAAwK,EAAAvK,MAAA,cAAAuK,EAAAvK,KAAA,EAChCjB,EAAOC,KAAP,iBAAAlB,OAA6Be,EAA7B,UAA8C,CAAE8B,OAAMR,KAAM,MAD5B,OACjDP,EADiD2K,EAAArK,KAGvDtB,EAAOC,EAAS,CAAC,CAAEM,GAAIS,EAASjB,KAAKQ,GAAI8B,SAAUpC,EAASsB,KD3GnC,EC2GsDC,QAAS,CAAEc,UAAWyI,MAErGhK,EAAS,CAAEQ,KCpGc,cDoGKC,QAASR,EAASjB,OALO,wBAAA4L,EAAAlK,SAAAiK,EAAAhK,SAA3B,gBAAAkK,GAAA,OAAAH,EAAA7J,MAAAF,KAAAG,YAAA,KU3Bf8C,CAGbyG,GClFaG,EAAA,SAAA9F,GAAqB,IAAlBiE,EAAkBjE,EAAlBiE,KAAMrC,EAAY5B,EAAZ4B,MACtB,MAAqB,MAAdqC,EAAKnI,KACV6C,EAAAxD,EAAAyD,cAACwH,EAAD,CAAUrE,IAAKkC,EAAKnJ,GAAImJ,KAAMA,EAAMrC,MAAOA,IAE3CjD,EAAAxD,EAAAyD,cAACyH,EAAD,CAAetE,IAAKkC,EAAKnJ,GAAImJ,KAAMA,EAAMrC,MAAOA,KCJ9C0E,wLACU,IACJ1E,EAAU3F,KAAK0B,MAAfiE,MAER,OAAKA,GAAUA,EAAMoD,MAIdpD,EAAMoD,MAAMrD,IAAI,SAAAsC,GAAI,OAAItF,EAAAxD,EAAAyD,cAACkH,EAAD,CAAM/D,IAAKkC,EAAKnJ,GAAImJ,KAAMA,EAAMrC,MAAOA,MAH7D,sCAOT,IAAMA,EAAQ3F,KAAK0B,MAAMiE,MAEnBX,EAAmB,OADTW,GAASA,EAAMjF,QAAW,KACX,cAAgB,WAC/C,OAAOgC,EAAAxD,EAAAyD,cAAA,OAAKE,UAAS,UAAArF,OAAYwH,IAAUhF,KAAK8J,sBAfjC/G,IAAMC,WAyBVC,cANS,SAACC,EAAOoE,GAC9B,MAAO,CACL3B,MAAOzC,EAAMuC,OAAO6B,EAAS3B,MAAM9G,MAIxBoE,CAAyBoH,2BC3BzBC,EAAA,SAAAC,GAAW,OAAI,SAACC,EAASC,EAAcC,GAYpD,OAAOH,EAXkB,SAACrH,EAAOyH,GAC/B,IAJUC,EAIJ5M,EAAQ6M,YAAYC,MACpBC,EAAWP,EAAQtH,EAAOyH,GAC1BK,EAAMH,YAAYC,MAClBG,GAPIL,EAOSI,EAAMhN,EAPLkN,KAAKC,MAAe,IAATP,GAAgB,KAW/C,OAFA3M,QAAQC,IAAI,wBAAyB+M,GAE9BF,GAG4BN,EAAcC,KCdtCU,EAAA,SAAAC,GAAK,OAAI,SAAA3L,GAAI,OAAI,SAAAiL,GAC9B1M,QAAQqN,MAAMX,EAAO9K,MACrB5B,QAAQsN,KAAK,cAAeZ,GAC5B,IAAIa,EAAS9L,EAAKiL,GAGlB,OAFA1M,QAAQC,IAAI,aAAcmN,EAAMI,YAChCxN,QAAQyN,WACDF,KCJHG,EAAe,CACnB3K,WAAY,KACZmC,YAAa,8BCKA8C,EATU,WAAwB,IAAvB/C,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EAC/C,OAAQjB,EAAO9K,MACb,IAAK,wBACH,OAAO8K,EAAO9G,OAChB,QACE,OAAOX,ICKE2I,6BAAgB,CAC7B1K,KFJF,WAAiD,IAAjC+B,EAAiC/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAzBwL,EAAchB,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EAC/C,OAAQjB,EAAO9K,MACb,IdTmB,UcUjB,OAAOd,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZ,CAAmBlC,YAAY,EAAMmC,YAAawH,EAAO7K,UAC3D,IdVoB,WcWlB,OAAOf,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZ,CAAmBlC,YAAY,EAAOmC,YAAa,OACrD,QACE,OAAOD,IEFXuC,OCAa,WAAwB,IAAvBvC,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EACjCjG,EAAQ,KACZ,OAAQgF,EAAO9K,MACb,IjBZ6B,oBiBiB3B,OAJA8F,EAAK5G,OAAAgH,EAAA,EAAAhH,CAAA,GACAmE,EAAMyH,EAAO7K,QAAQjB,IADrB,CAEHkK,MAAO4B,EAAO7K,QAAQiJ,QAEjBhK,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8G,IAC1C,IjBhBwB,eiBiBtB,OAAO5G,OAAAgH,EAAA,EAAAhH,CAAA,GAAKgN,IAAEC,QAAQrB,EAAO7K,QAAS,OACxC,IjBjBuB,ciBmBvB,IjBlBwB,eiBoBxB,IjBlBwB,eiBoBxB,IjBnBuB,ciBoBrB,OAAOf,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8L,EAAO7K,UACjD,IjBvBwB,eiBwBtB,OAAOiM,IAAEE,KAAK/I,EAAOyH,EAAO7K,SAC9B,IjBtBwB,eiB2BtB,OAJA6F,EAAK5G,OAAAgH,EAAA,EAAAhH,CAAA,GACAmE,EAAMyH,EAAO7K,QAAQjB,IADrB,CAEH6B,OAAQiK,EAAO7K,QAAQY,SAElB3B,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8G,IAC1C,QACE,OAAOzC,ID3BXgJ,WEXa,WAAwB,IAAvBhJ,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EACrC,OAAQjB,EAAO9K,MACb,IlBD6B,oBkBE3B,OAAOd,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8L,EAAO7K,UACjD,QACE,OAAOoD,IFOX6F,MGVa,WAAwB,IAAvB7F,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EACrC,OAAQjB,EAAO9K,MACb,InBSuB,cmBRrB,OAAOd,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8L,EAAO7K,UACjD,QACE,OAAOoD,IHMXiJ,UIba,WAAwB,IAAvBjJ,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EACrC,OAAQjB,EAAO9K,MACb,IpBS4B,mBoBR1B,OAAOd,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8L,EAAO7K,UACjD,QACE,OAAOoD,IJSXkJ,UKda,WAAwB,IAAvBlJ,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EACrC,OAAQjB,EAAO9K,MACb,IrBa4B,mBqBZ1B,OAAOd,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8L,EAAO7K,UACjD,QACE,OAAOoD,ILUX0F,MMba,WAAwB,IAAvB1F,EAAuB/C,UAAAiJ,OAAA,QAAAwC,IAAAzL,UAAA,GAAAA,UAAA,GAAf,GAAIwK,EAAWxK,UAAAiJ,OAAA,EAAAjJ,UAAA,QAAAyL,EACrC,OAAQjB,EAAO9K,MACb,ItBauB,csBZrB,OAAOd,OAAAgH,EAAA,EAAAhH,CAAA,GAAKmE,EAAZnE,OAAA+M,EAAA,EAAA/M,CAAA,GAAoB4L,EAAO7K,QAAQjB,GAAK8L,EAAO7K,UACjD,QACE,OAAOoD,INSX+C,qBOAaoG,GAVQ,WACrB,IAAMC,EAAc,CAACC,EAAkBC,KAGjCC,EAAY,CAFSC,kBAAexM,WAAf,EAAmBoM,GAEPK,GACjCC,EAAoBC,sBAAmB3M,WAAnB,EAAuBuM,GAEjD,OAAOlC,sBAAYuC,GAAa,GAAIF,GAGvBP,GCdTU,GAA0B,EAC1BC,GAA0B,EAC1BC,GAA2B,EAK7BC,GAAS,KA8Bb,SAASC,GAAYC,EAAIC,GACvBpP,QAAQC,IAAI,kBAAmBoP,KAAKC,MAAMF,IAC1CD,EAAGI,KAAKH,GAGV,SAASI,GAAoBJ,GAC3B,OAAQA,EAAIxN,MACV,KAAKkN,GACL,KAAKC,GACL,KAAKC,GAGH,OAFAhP,QAAQC,IAAI,uCAAwCmP,QACpDzO,EAAWyO,EAAI1M,SAAf/B,CAAyByM,GAAMhM,WAStB,IAAAqO,GAAA,SAAAL,GACb,IAAKH,GAGH,OAFAjP,QAAQC,IAAI,gCACZgP,GAnDJ,SAAsBG,GACpB,IAAIM,EAAO,IAAIC,UAAJ,GAAApQ,OAAiBC,EAAjB,mBAwBX,OAtBAkQ,EAAKE,OAAS,SAASC,GACrB7P,QAAQC,IAAI,oBACRmP,GACFF,GAAYQ,EAAMN,IAGtBM,EAAKI,QAAU,SAASD,GACtB7P,QAAQC,IAAI,oBACZgP,GAAS,MAEXS,EAAKK,UAAY,SAASF,GACxB,IAAMG,EAAgBX,KAAKC,MAAMO,EAAIzP,MAErC,GADAJ,QAAQC,IAAI,qBAAsB+P,GAC9BA,GAAiBA,EAAc7E,OAAQ,KAAA8E,GAAA,EAAAC,GAAA,EAAAC,OAAAxC,EAAA,IACzC,QAAAyC,EAAAC,EAAyBL,EAAzBM,OAAAC,cAAAN,GAAAG,EAAAC,EAAA5O,QAAA+O,MAAAP,GAAA,EACET,GADsCY,EAAA7J,OADC,MAAAkK,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,SAKzCnQ,QAAQC,IAAI,iCAITyP,EA0BIiB,CAAavB,IAIxBF,GAAYD,GAAQG,IC7DhBwB,+LACgB,IACVhQ,EAAOmB,KAAK0B,MAAMtE,MAAM0R,OAAxBjQ,GAERmB,KAAK0B,MAAM9C,WAAWC,GAEtBqO,GAAOI,KAAKyB,UAAU,CAAElQ,uDAIxBqO,GAAOI,KAAKyB,UAAU,CAAElQ,GAAI,uCAK5B,OADAZ,QAAQC,IAAI,gBACP8B,KAAK0B,MAAMiE,MAKdjD,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAACqM,EAAD,CAAQrJ,MAAO3F,KAAK0B,MAAMiE,QAC1BjD,EAAAxD,EAAAyD,cAACsM,EAAD,CAAMtJ,MAAO3F,KAAK0B,MAAMiE,SANnBjD,EAAAxD,EAAAyD,cAAA,gCAhBOI,IAAMC,WAkCXC,eANS,SAACC,EAAOoE,GAC9B,MAAO,CACL3B,MAAOzC,EAAMuC,OAAO6B,EAASlK,MAAM0R,OAAOjQ,MAM5C,CAAED,cAFWqE,CAGb4L,wCC1CaK,eCgBAC,GAXH,kBACVzM,EAAAxD,EAAAyD,cAACyM,GAAA,EAAD,CAAQC,QAASA,IACf3M,EAAAxD,EAAAyD,cAAA,WACED,EAAAxD,EAAAyD,cAAC2M,GAAA,EAAD,KACE5M,EAAAxD,EAAAyD,cAAC4M,GAAA,EAAD,CAAOC,KAAI,GAAAhS,OAAKF,EAAL,KAAcmS,OAAK,EAACC,UAAWvI,IAC1CzE,EAAAxD,EAAAyD,cAAC4M,GAAA,EAAD,CAAOC,KAAI,GAAAhS,OAAKF,EAAL,cAAuBoS,UAAWb,qBCFrDc,iBACEjN,EAAAxD,EAAAyD,cAACiN,EAAA,EAAD,CAAUvE,MAAOA,IACf3I,EAAAxD,EAAAyD,cAACkN,GAAD,OAEFC,SAASC,eAAe,SjCmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5N,KAAK,SAAA6N,GACjCA,EAAaC","file":"static/js/main.3223fa69.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const remote = true;\r\nconst secure = remote ? 's' : '';\r\nconst host = remote ? 'dmitrybodnar.com' : 'localhost:3001';\r\n\r\nexport const root = remote ? '/kanban-ui' : '';\r\nexport const api = `http${secure}://${host}`;\r\nexport const wsapi = `ws${secure}://${host}`;\r\n","import axios from 'axios';\r\nimport { api } from './urls';\r\n\r\nexport default axios.create({\r\n  baseURL: api\r\n});","import server from './index';\r\nimport { root } from './urls';\r\n\r\nexport const UPDATECARD = 0;\r\nexport const REMOVECARD = 1;\r\nexport const EXCLUDECHILD = 2;\r\nexport const APPENDCHILD = 3;\r\nexport const INSERTBEFORE = 4;\r\nexport const INSERTAFTER = 5;\r\nexport const LAYOUTBOARD = 6;\r\n\r\nlet sharedWorker = null;\r\n\r\nif (window.SharedWorker) {\r\n  sharedWorker = new SharedWorker(`${root}/worker.js`);\r\n  sharedWorker.port.start();\r\n\r\n  console.log('shared worker: started');\r\n\r\n  sharedWorker.port.addEventListener('message', event => {\r\n    console.log('main: message received from shared worker', event.data);\r\n  });\r\n}\r\n\r\nexport default (boardId, commands) => {\r\n  if (!sharedWorker) {\r\n    console.log('main: shared worker is not available');\r\n\r\n    server.post(`/v1/api/command/${boardId}`, commands);\r\n    \r\n    return;\r\n  }\r\n\r\n  console.log('main: post commands to shared worker', commands);\r\n\r\n  sharedWorker.port.postMessage({ boardId, commands });\r\n\r\n  console.log('main: commands posted to shared worker');\r\n};\r\n","import server from '../apis/index';\r\nimport worker, { LAYOUTBOARD, APPENDCHILD, REMOVECARD } from '../apis/worker';\r\n//import { root } from '../apis/urls';\r\n//import history from '../history';\r\n\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n\r\n  FETCH_BOARD_LANES,\r\n\r\n  CREATE_BOARD,\r\n  FETCH_BOARDS,\r\n  FETCH_BOARD,\r\n  DELETE_BOARD,\r\n  RENAME_BOARD,\r\n  SHARE_BOARD,\r\n  LAYOUT_BOARD,\r\n\r\n  FETCH_LANE_LANES,\r\n  CREATE_LANE,\r\n\r\n  FETCH_LANE_CARDS,\r\n  CREATE_CARD,\r\n  DELETE_CARD\r\n\r\n} from './types';\r\n\r\nexport const signIn = userId => {\r\n  return {\r\n    type: SIGN_IN,\r\n    payload: userId\r\n  };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT\r\n  };\r\n};\r\n\r\nexport const setVisibilityFilter = filter => ({\r\n  type: 'SET_VISIBILITY_FILTER',\r\n  filter\r\n});\r\n\r\nexport const fetchBoardLanes = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/board/${id}/lanes`);\r\n\r\n  dispatch({ type: FETCH_BOARD_LANES, payload: { id, lanes: response.data }});\r\n};\r\n\r\nexport const fetchBoards = owner => async dispatch => {\r\n  const response = owner\r\n    ? await server.get(`/v1/api/board?owner=${owner}`)\r\n    : await server.get('/v1/api/board');\r\n\r\n  dispatch({ type: FETCH_BOARDS, payload: response.data });\r\n};\r\n\r\nexport const fetchBoard = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/board/${id}`);\r\n\r\n  dispatch({ type: FETCH_BOARD, payload: response.data });\r\n};\r\n\r\nexport const createBoard = (name, owner) => async dispatch => {\r\n  const response = await server.post('/v1/api/board', { name, owner, layout: 'H', shared: false });\r\n\r\n  dispatch({ type: CREATE_BOARD, payload: response.data });\r\n};\r\n\r\nexport const layoutBoard = (id, layout) => async dispatch => {\r\n  worker(id, [{ id, board_id: id, type: LAYOUTBOARD, payload: { layout } }]);\r\n\r\n  dispatch({ type: LAYOUT_BOARD, payload: { id, layout } });\r\n};\r\n\r\nexport const renameBoard = (id, name) => async dispatch => {\r\n  const response = await server.put(`/v1/api/board/${id}/rename`, { name });\r\n\r\n  dispatch({ type: RENAME_BOARD, payload: response.data });\r\n};\r\n\r\nexport const shareBoard = (id, shared) => async dispatch => {\r\n  const response = await server.put(`/v1/api/board/${id}/share`, { shared });\r\n\r\n  dispatch({ type: SHARE_BOARD, payload: response.data });\r\n};\r\n\r\nexport const deleteBoard = id => async dispatch => {\r\n  await server.delete(`/v1/api/board/${id}`);\r\n\r\n  dispatch({ type: DELETE_BOARD, payload: id });\r\n};\r\n\r\nexport const fetchLaneLanes = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/lane/${id}/lane`);\r\n\r\n  dispatch({ type: FETCH_LANE_LANES, payload: { id, lanes: response.data }});\r\n};\r\n\r\nexport const createLane = (name, parentId) => async dispatch => {\r\n  const response = await server.post(`/v1/api/board/${parentId}/lanes`, { name, layout: 'H', type: 'L' });\r\n\r\n  worker(parentId, [{ id: response.data.id, board_id: parentId, type: APPENDCHILD, payload: { parent_id: parentId } }]);\r\n\r\n  dispatch({ type: CREATE_LANE, payload: response.data });\r\n};\r\n\r\nexport const createCardLane = (boardId, name, laneId) => async dispatch => {\r\n  const response = await server.post(`/v1/api/board/${boardId}/lanes`, { name, type: 'C' });\r\n\r\n  worker(boardId, [{ id: response.data.id, board_id: boardId, type: APPENDCHILD, payload: { parent_id: laneId } }]);\r\n\r\n  dispatch({ type: CREATE_LANE, payload: response.data });\r\n};\r\n\r\nexport const fetchLaneCards = id => async dispatch => {\r\n  const response = await server.get(`/v1/api/lane/${id}/card`);\r\n\r\n  dispatch({ type: FETCH_LANE_CARDS, payload: { id, cards: response.data }});\r\n};\r\n\r\nexport const createCard = (boardId, name, laneId) => async dispatch => {\r\n  const response = await server.post(`/v1/api/board/${boardId}/cards`, { name });\r\n\r\n  worker(boardId, [{ id: response.data.id, board_id: boardId, type: APPENDCHILD, payload: { parent_id: laneId } }]);\r\n\r\n  dispatch({ type: CREATE_CARD, payload: response.data });\r\n};\r\n\r\nexport const deleteCard = (id, laneId) => dispatch => {\r\n  worker([{ id: id, type: REMOVECARD, payload: { parent_id: laneId } }]);\r\n\r\n  dispatch({ type: DELETE_CARD, payload: id });\r\n};\r\n","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';\r\n\r\nexport const FETCH_BOARD_LANES = 'FETCH_BOARD_LANES'\r\n\r\nexport const FETCH_BOARDS = 'FETCH_BOARDS';\r\nexport const FETCH_BOARD = 'FETCH_BOARD';\r\nexport const CREATE_BOARD = 'CREATE_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const RENAME_BOARD = 'RENAME_BOARD';\r\nexport const SHARE_BOARD = 'SHARE_BOARD';\r\nexport const LAYOUT_BOARD = 'LAYOUT_BOARD';\r\n\r\nexport const FETCH_LANE_LANES = 'FETCH_LANE_LANES'\r\n\r\nexport const CREATE_LANE = 'CREATE_LANE';\r\n\r\nexport const FETCH_LANE_CARDS = 'FETCH_LANE_CARDS'\r\n\r\nexport const CREATE_CARD = 'CREATE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n  componentDidMount() {\r\n    window.gapi.load('client:auth2', () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            //'745975090298-bi7i72f2akkt9cglmjjsgqh0q9qo2vmt.apps.googleusercontent.com', //https://dmibod.github.io\r\n            '797401886567-9cumct9mrt3v2va409rasa7fa6fq02hh.apps.googleusercontent.com', //http://localhost:3000\r\n          scope: 'email'\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n\r\n          this.onAuthChange(this.auth.isSignedIn.get());\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = isSignedIn => {\r\n    if (isSignedIn) {\r\n      const profile = this.auth.currentUser.get().getBasicProfile();\r\n      const payload = {\r\n        id: profile.getId(),\r\n        email: profile.getEmail(),\r\n        name: profile.getName()\r\n      };\r\n      this.props.signIn(payload);\r\n    } else {\r\n      this.props.signOut();\r\n    }\r\n  };\r\n\r\n  onSignInClick = () => {\r\n    this.auth.signIn();\r\n  };\r\n\r\n  onSignOutClick = () => {\r\n    this.auth.signOut();\r\n  };\r\n\r\n  render() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null;\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button\r\n          onClick={this.onSignOutClick}\r\n          className=\"btn btn-info btn-sm\"\r\n          title={this.props.profile.name}\r\n        >\r\n          <i className=\"fa fa-fw fa-google\" />\r\n        </button>\r\n      );\r\n    } else {\r\n      return (\r\n        <button\r\n          onClick={this.onSignInClick}\r\n          className=\"btn btn-info btn-sm\"\r\n        >\r\n          <i className=\"fa fa-fw fa-google\" />\r\n          Sign In\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { isSignedIn: state.auth.isSignedIn, profile: state.auth.userProfile };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { signIn, signOut }\r\n)(GoogleAuth);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createBoard, setVisibilityFilter } from '../../actions';\r\nimport GoogleAuth from '../GoogleAuth';\r\n\r\nconst Header = ({ secure, owner, create, filter }) => {\r\n  let input;\r\n\r\n  const createButton = () => {\r\n    if (!secure) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          className=\"btn btn-info btn-sm\"\r\n          onClick={e => {\r\n            if (!input.value.trim()) {\r\n              return;\r\n            }\r\n            console.log(secure, owner);\r\n            create(input.value, secure ? owner : 'anonymous');\r\n            input.value = '';\r\n          }}\r\n        >\r\n          <i className=\"fa fa-fw fa-check\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark navbar-dark fixed-top\">\r\n      <div className=\"container-fluid no-gutters\">\r\n        <div className=\"col-12 col-sm-9 col-md-6 col-lg-3 ml-auto mr-auto\">\r\n          <form\r\n            className=\"input-group\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <GoogleAuth />\r\n              </div>\r\n              <input\r\n                type=\"search\"\r\n                className=\"form-control form-control-sm\"\r\n                placeholder=\"Board title...\"\r\n                ref={node => (input = node)}\r\n              />\r\n              {createButton()}\r\n              <div className=\"input-group-append\">\r\n                <button\r\n                  className=\"btn btn-info btn-sm\"\r\n                  onClick={e => {\r\n                    filter(input.value.trim());\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-fw fa-search\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  secure: state.auth.isSignedIn,\r\n  owner: state.auth.userProfile && state.auth.userProfile.id\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  create: (title, owner) => createBoard(title, owner)(dispatch),\r\n  filter: title => dispatch(setVisibilityFilter(title))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Header);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { root } from '../../apis/urls';\r\n\r\nconst Item = ({ id, name, description, shared, editable, shareBoard, deleteBoard }) => (\r\n  <div id={`${id}`} className=\"card-wrapper float-left m-3\">\r\n    <div className=\"card shadow board\">\r\n      <div className=\"card-header\">\r\n        <div className=\"card-title mb-0\">\r\n          <div className=\"row mx-0\">\r\n            <div className=\"mr-auto\">\r\n              <Link\r\n                className=\"text-info\"\r\n                style={{ textDecoration: 'none', fontWeight: '500' }}\r\n                to={`${root}/board/${id}`}\r\n              >\r\n                {name}\r\n              </Link>\r\n            </div>\r\n            <div\r\n              className=\"hover-card-badges\"\r\n              style={{ display: editable ? 'inline' : 'none' }}\r\n            >\r\n              <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n              <i\r\n                className=\"fa fa-fw fa-eye text-muted\"\r\n                title=\"public\"\r\n                style={{ display: shared ? 'inline' : 'none' }}\r\n                onClick={() => shareBoard(id, false)}\r\n              />\r\n              <i\r\n                className=\"fa fa-fw fa-eye-slash text-muted\"\r\n                title=\"private\"\r\n                style={{ display: shared ? 'none' : 'inline' }}\r\n                onClick={() => shareBoard(id, true)}\r\n              />\r\n              <i\r\n                className=\"fa fa-fw fa-trash text-muted\"\r\n                title=\"delete\"\r\n                onClick={() => deleteBoard(id)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-body\">\r\n        <div className=\"board-body-wrapper\">\r\n          <div className=\"card-text small text-justify\">{description}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Item;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Item from './Item';\r\nimport {\r\n  fetchBoards,\r\n  shareBoard,\r\n  deleteBoard\r\n} from '../../actions';\r\n\r\nclass List extends React.Component {\r\n  componentDidMount() {\r\n    this.props.fetchBoards(this.props.currentUserId);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.currentUserId !== prevProps.currentUserId) {\r\n      this.props.fetchBoards(this.props.currentUserId);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container-fluid board-list\">\r\n        <div className=\"lane-wrapper lane-item\">\r\n          <div className=\"lane-body\">\r\n            {this.props.boards.map(board => (\r\n              <Item\r\n                key={board.id}\r\n                {...{\r\n                  ...board,\r\n                  editable: this.props.isSignedIn && this.props.currentUserId === board.owner,\r\n                  shareBoard: this.props.shareBoard,\r\n                  deleteBoard: this.props.deleteBoard\r\n                }}\r\n              />\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nTodoList.propTypes = {\r\n  todos: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      selected: PropTypes.bool.isRequired,\r\n      text: PropTypes.string.isRequired\r\n    }).isRequired\r\n  ).isRequired,\r\n  toggleTodo: PropTypes.func.isRequired,\r\n  removeTodo: PropTypes.func.isRequired\r\n};\r\n*/\r\n\r\nconst mapStateToProps = state => {\r\n  let boards = Object.values(state.boards);\r\n  let filter = state.visibilityFilter.toLowerCase();\r\n\r\n  return {\r\n    boards: boards.filter(board => (board.name || '').toLowerCase().includes(filter)),\r\n    currentUserId: state.auth.isSignedIn ? state.auth.userProfile.id : null,\r\n    isSignedIn: state.auth.isSignedIn\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoards, shareBoard, deleteBoard }\r\n)(List);\r\n","import React from 'react';\r\nimport Header from './boards/Header';\r\nimport List from './boards/List';\r\n\r\nconst Boards = () => {\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <List />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Boards;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { renameBoard, layoutBoard, createLane } from '../../actions';\r\nimport { root } from '../../apis/urls';\r\n\r\nconst Header = ({ editable, update, layout, lane, board }) => {\r\n  let input;\r\n\r\n  const updateButton = () => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"input-group-append\">\r\n        <button\r\n          className=\"btn btn-success btn-sm\"\r\n          onClick={e => {\r\n            if (!input.value.trim()) {\r\n              return;\r\n            }\r\n            update(board.id, input.value);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-fw fa-check\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const layoutButton = () => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n\r\n    const layoutIcon = board.layout === 'V' ? 'fa-table' : 'fa-columns';\r\n\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm text-white\"\r\n        onClick={e => {\r\n          layout(board.id, board.layout === 'V' ? 'H' : 'V');\r\n        }}\r\n      >\r\n        <i className={`fa fa-fw ${layoutIcon}`} />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const laneButton = () => {\r\n    if (!editable) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className=\"btn btn-sm text-white\"\r\n        onClick={e => {\r\n          lane('Lane', board.id);\r\n        }}\r\n      >\r\n        <i className=\"fa fa-fw fa-file\" />\r\n      </button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navbar bg-dark navbar-dark\">\r\n      <div className=\"container-fluid no-gutters\">\r\n        <div className=\"col-12 col-sm-12 col-md-6 col-lg-3 ml-auto\">\r\n          <form\r\n            className=\"input-group ml-auto mr-auto\"\r\n            onSubmit={e => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            <div className=\"input-group\">\r\n              <div className=\"input-group-prepend\">\r\n                <Link to={`${root}/`} className=\"btn btn-success btn-sm\">\r\n                  <i className=\"fa fa-fw fa-home\" />\r\n                </Link>\r\n              </div>\r\n              <input\r\n                type=\"search\"\r\n                className=\"form-control form-control-sm\"\r\n                defaultValue={board.name}\r\n                ref={node => (input = node)}\r\n              />\r\n              {updateButton()}\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"mr-auto\">\r\n          {laneButton()}\r\n          <button className=\"btn btn-sm text-white\">\r\n            <i className=\"fa fa-fw fa-filter\" />\r\n          </button>\r\n          {layoutButton()}\r\n          <button className=\"btn btn-sm text-white\">\r\n            <i className=\"fa fa-fw fa-gear\" />\r\n          </button>\r\n          <button className=\"btn btn-sm text-white\">\r\n            <i className=\"fa fa-fw fa-refresh\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    editable:\r\n      state.auth.isSignedIn &&\r\n      ownProps.board &&\r\n      ownProps.board.owner === state.auth.userProfile.id\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { update: renameBoard, layout: layoutBoard, lane: createLane }\r\n)(Header);\r\n","import React from 'react';\r\n\r\nexport default ({ card, deleteCard }) => {\r\n  return (\r\n    <div className=\"card-wrapper float-left m-3\">\r\n      <div className=\"card shadow item\">\r\n        <div className=\"card-header\">\r\n          <div className=\"card-title mb-0\">\r\n          <div className=\"row mx-0\">\r\n              <div className=\"mr-auto\">{card.name}</div>\r\n              <div\r\n                className=\"hover-card-badges\"\r\n                style={{ display: /*editable*/ true ? 'inline' : 'none' }}\r\n              >\r\n                <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n                <i\r\n                  className=\"fa fa-fw fa-trash text-muted\"\r\n                  title=\"delete\"\r\n                  onClick={() => deleteCard(card.id)}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-body py-2\" style={{ overflow: 'hidden' }}>\r\n          <div className=\"card-body-wrapper\">\r\n            <div className=\"card-text small text-justify\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Aspernatur odio fuga perspiciatis nesciunt rem quasi vero deleniti\r\n              sed beatae ex laborum dignissimos ipsam doloremque, expedita, quae\r\n              eum voluptates! Ut, necessitatibus!\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  createCard,\r\n  deleteCard\r\n} from '../../actions';\r\nimport Card from './Card';\r\n\r\nclass CardLane extends React.Component {\r\n  renderCards() {\r\n    const { lane } = this.props;\r\n\r\n    if (!lane || !lane.cards) {\r\n      return null;\r\n    }\r\n\r\n    return lane.cards.map(card => <Card key={card.id} card={card} deleteCard={this.deleteCard}/>);\r\n  }\r\n\r\n  createCard = () => {\r\n    const { lane, board, createCard } = this.props;\r\n\r\n    if (lane && createCard) {\r\n      createCard(board.id, 'Card', lane.id);\r\n    }\r\n  };\r\n\r\n  deleteCard = (id) => {\r\n    const { lane, deleteCard } = this.props;\r\n\r\n    if (lane && deleteCard) {\r\n      deleteCard(id, lane.id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lane-wrapper\">\r\n        <div className=\"lane-header card-header border rounded-0\">\r\n          <div className=\"card-title mb-0\">\r\n            <div className=\"row mx-0\">\r\n              <div className=\"mr-auto\">{this.props.lane.name}</div>\r\n              <div\r\n                className=\"hover-card-badges\"\r\n                style={{ display: /*editable*/ true ? 'inline' : 'none' }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-fw fa-file text-muted\"\r\n                  title=\"card\"\r\n                  onClick={this.createCard}\r\n                />\r\n                <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n                <i\r\n                  className=\"fa fa-fw fa-trash text-muted\"\r\n                  title=\"delete\"\r\n                  /*onClick={() => deleteLane(id)}*/\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"lane-body\">{this.renderCards()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction findLane(lanes, id) {\r\n  lanes = lanes || [];\r\n\r\n  let found = lanes.find(el => el.id === id);\r\n\r\n  if (found) {\r\n    return found;\r\n  }\r\n\r\n  for (let i = 0; i < lanes.length; i++) {\r\n    found = findLane(lanes[i].lanes, id);\r\n    if (found) {\r\n      return found;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let board = state.boards[ownProps.board.id];\r\n  let lane  = findLane(board.lanes, ownProps.lane.id);\r\n  return { board, lane };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createCard, deleteCard }\r\n)(CardLane);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createLane, createCardLane } from '../../actions';\r\nimport Lane from './Lane';\r\n\r\nclass CompositeLane extends React.Component {\r\n  renderLanes() {\r\n    const { lane, board } = this.props;\r\n\r\n    if (!lane || !lane.lanes) {\r\n      return null;\r\n    }\r\n\r\n    return lane.lanes.map(lane => (\r\n      <Lane key={lane.id} lane={lane} board={board} />\r\n    ));\r\n  }\r\n\r\n  createChild = () => {\r\n    const { lane, board, createCardLane } = this.props;\r\n\r\n    if (lane && createCardLane) {\r\n      createCardLane(board.id, 'CardLane', lane.id);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"lane-wrapper\">\r\n        <div className=\"lane-header card-header border rounded-0\">\r\n          <div className=\"card-title mb-0\">\r\n            <div className=\"row mx-0\">\r\n              <div className=\"mr-auto\">{this.props.lane.name}</div>\r\n              <div\r\n                className=\"hover-card-badges\"\r\n                style={{ display: /*editable*/ true ? 'inline' : 'none' }}\r\n              >\r\n                <i\r\n                  className=\"fa fa-fw fa-file text-muted\"\r\n                  title=\"lane\"\r\n                  onClick={this.createChild}\r\n                />\r\n                <i className=\"fa fa-fw fa-pencil text-muted\" title=\"edit\" />\r\n                <i\r\n                  className=\"fa fa-fw fa-trash text-muted\"\r\n                  title=\"delete\"\r\n                  /*onClick={() => deleteLane(id)}*/\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"lane-body\">{this.renderLanes()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction findLane(lanes, id) {\r\n  lanes = lanes || [];\r\n\r\n  let found = lanes.find(el => el.id === id);\r\n\r\n  if (found) {\r\n    return found;\r\n  }\r\n\r\n  for (let i = 0; i < lanes.length; i++) {\r\n    found = findLane(lanes[i].lanes, id);\r\n    if (found) {\r\n      return found;\r\n    }\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  let board = state.boards[ownProps.board.id];\r\n  let lane = findLane(board.lanes, ownProps.lane.id);\r\n  return { board, lane };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { createLane, createCardLane }\r\n)(CompositeLane);\r\n","import React from 'react';\r\nimport CardLane from './CardLane';\r\nimport CompositeLane from './CompositeLane';\r\n\r\nexport default ({ lane, board }) => {\r\n  return lane.type === 'C' ? (\r\n    <CardLane key={lane.id} lane={lane} board={board}/>\r\n  ) : (\r\n    <CompositeLane key={lane.id} lane={lane} board={board}/>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Lane from './Lane';\r\n\r\nclass Body extends React.Component {\r\n  renderLanes() {\r\n    const { board } = this.props;\r\n\r\n    if (!board || !board.lanes) {\r\n      return null;\r\n    }\r\n\r\n    return board.lanes.map(lane => <Lane key={lane.id} lane={lane} board={board} />);\r\n  }\r\n\r\n  render() {\r\n    const board = this.props.board;\r\n    const layout = (board && board.layout) || 'V';\r\n    const style = layout === 'V' ? 'flex-column' : 'flex-row';\r\n    return <div className={`d-flex ${style}`}>{this.renderLanes()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    board: state.boards[ownProps.board.id]\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Body);\r\n\r\n","const round = number => Math.round(number * 100) / 100;\r\n\r\nexport default createStore => (reducer, initialState, enhancer) => {\r\n  const monitoredReducer = (state, action) => {\r\n    const start = performance.now();\r\n    const newState = reducer(state, action);\r\n    const end = performance.now();\r\n    const diff = round(end - start);\r\n\r\n    console.log('reducer process time:', diff);\r\n\r\n    return newState;\r\n  };\r\n\r\n  return createStore(monitoredReducer, initialState, enhancer);\r\n};\r\n","export default store => next => action => {\r\n  console.group(action.type);\r\n  console.info('dispatching', action);\r\n  let result = next(action);\r\n  console.log('next state', store.getState());\r\n  console.groupEnd();\r\n  return result;\r\n};\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INTIAL_STATE = {\r\n  isSignedIn: null,\r\n  userProfile: null\r\n};\r\n\r\nexport default (state = INTIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, userProfile: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, userProfile: null };\r\n    default:\r\n      return state;\r\n  }\r\n};","const visibilityFilter = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'SET_VISIBILITY_FILTER':\r\n      return action.filter\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default visibilityFilter","import { combineReducers } from 'redux'\r\nimport authReducer from './authReducer';\r\nimport boardReducer from './boardReducer';\r\nimport boardLaneReducer from './boardLaneReducer';\r\nimport laneReducer from './laneReducer';\r\nimport laneLaneReducer from './laneLaneReducer';\r\nimport laneCardReducer from './laneCardReducer';\r\nimport cardReducer from './cardReducer';\r\nimport visibilityFilter from './visibilityFilter'\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  boards: boardReducer,\r\n  boardLanes: boardLaneReducer,\r\n  lanes: laneReducer,\r\n  laneLanes: laneLaneReducer,\r\n  laneCards: laneCardReducer,\r\n  cards: cardReducer,\r\n  visibilityFilter\r\n})\r\n","import _ from 'lodash';\r\nimport {\r\n  FETCH_BOARD_LANES,\r\n  FETCH_BOARD,\r\n  FETCH_BOARDS,\r\n  CREATE_BOARD,\r\n  RENAME_BOARD,\r\n  SHARE_BOARD,\r\n  DELETE_BOARD,\r\n  LAYOUT_BOARD\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  let board = null;\r\n  switch (action.type) {\r\n    case FETCH_BOARD_LANES:\r\n      board = {\r\n        ...state[action.payload.id],\r\n        lanes: action.payload.lanes\r\n      };\r\n      return { ...state, [action.payload.id]: board };\r\n    case FETCH_BOARDS:\r\n      return { ..._.mapKeys(action.payload, 'id') };\r\n    case FETCH_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case CREATE_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case RENAME_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case SHARE_BOARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    case DELETE_BOARD:\r\n      return _.omit(state, action.payload);\r\n    case LAYOUT_BOARD:\r\n      board = {\r\n        ...state[action.payload.id],\r\n        layout: action.payload.layout\r\n      };\r\n      return { ...state, [action.payload.id]: board };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_BOARD_LANES } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_BOARD_LANES:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_LANE\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_LANE:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_LANE_LANES } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_LANE_LANES:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { FETCH_LANE_CARDS } from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case FETCH_LANE_CARDS:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CREATE_CARD\r\n} from '../actions/types';\r\n\r\nexport default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CREATE_CARD:\r\n      return { ...state, [action.payload.id]: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport monitorReducerEnhancer from './enhancers/monitorReducer';\r\nimport loggerMiddleware from './middleware/logger';\r\nimport rootReducer from './reducers';\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [loggerMiddleware, thunkMiddleware];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n\r\n  const enhancers = [middlewareEnhancer, monitorReducerEnhancer];\r\n  const composedEnhancers = composeWithDevTools(...enhancers);\r\n\r\n  return createStore(rootReducer, {}, composedEnhancers);\r\n};\r\n\r\nexport default configureStore();\r\n","import { wsapi } from './urls';\r\nimport { fetchBoard } from '../actions';\r\nimport store from '../store';\r\n\r\nconst REFRESHCARDNOTIFICATION = 0;\r\nconst REFRESHLANENOTIFICATION = 1;\r\nconst REFRESHBOARDNOTIFICATION = 2;\r\nconst REMOVECARDNOTIFICATION = 3;\r\nconst REMOVELANENOTIFICATION = 4;\r\nconst REMOVEBOARDNOTIFICATION = 5;\r\n\r\nlet socket = null;\r\n\r\nfunction createSocket(msg) {\r\n  let conn = new WebSocket(`${wsapi}/v1/api/notify`);\r\n\r\n  conn.onopen = function(evt) {\r\n    console.log('websocket opened');\r\n    if (msg) {\r\n      sendMessage(conn, msg);\r\n    }\r\n  };\r\n  conn.onclose = function(evt) {\r\n    console.log('websocket closed');\r\n    socket = null;\r\n  };\r\n  conn.onmessage = function(evt) {\r\n    const notifiactions = JSON.parse(evt.data);\r\n    console.log('websocket: receive', notifiactions);\r\n    if (notifiactions && notifiactions.length) {\r\n      for (let notification of notifiactions) {\r\n        processNotification(notification);\r\n      }\r\n    } else {\r\n      console.log('array is expected by socket!');\r\n    }\r\n  };\r\n\r\n  return conn;\r\n}\r\n\r\nfunction sendMessage(ws, msg) {\r\n  console.log('websocket: send', JSON.parse(msg));\r\n  ws.send(msg);\r\n}\r\n\r\nfunction processNotification(msg) {\r\n  switch (msg.type) {\r\n    case REFRESHCARDNOTIFICATION:\r\n    case REFRESHLANENOTIFICATION:\r\n    case REFRESHBOARDNOTIFICATION:\r\n      console.log('REFRESHBOARDNOTIFICATION: fetchBoard', msg);\r\n      fetchBoard(msg.board_id)(store.dispatch);\r\n      return;\r\n    case REMOVECARDNOTIFICATION:\r\n    case REMOVELANENOTIFICATION:\r\n    case REMOVEBOARDNOTIFICATION:\r\n    default:\r\n  }\r\n}\r\n\r\nexport default msg => {\r\n  if (!socket) {\r\n    console.log('websocket not available');\r\n    socket = createSocket(msg);\r\n    return;\r\n  }\r\n\r\n  sendMessage(socket, msg);\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './board/Header';\r\nimport Body from './board/Body';\r\nimport socket from '../apis/socket';\r\nimport { fetchBoard } from '../actions';\r\n\r\nclass Board extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n\r\n    this.props.fetchBoard(id);\r\n\r\n    socket(JSON.stringify({ id }));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socket(JSON.stringify({ id: '' }));\r\n  }\r\n\r\n  render() {\r\n    console.log('render board')\r\n    if (!this.props.board) {\r\n      return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Header board={this.props.board} />\r\n        <Body board={this.props.board} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    board: state.boards[ownProps.match.params.id]\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { fetchBoard }\r\n)(Board);\r\n","import createHistory from 'history/createBrowserHistory';\r\n\r\nexport default createHistory();","import React from 'react';\nimport Boards from './Boards';\nimport Board from './Board';\nimport { root } from '../apis/urls';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport history from '../history';\n\nconst App = () => (\n  <Router history={history}>\n    <div>\n      <Switch>\n        <Route path={`${root}/`} exact component={Boards} />\n        <Route path={`${root}/board/:id`} component={Board} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/App';\nimport store from './store';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}